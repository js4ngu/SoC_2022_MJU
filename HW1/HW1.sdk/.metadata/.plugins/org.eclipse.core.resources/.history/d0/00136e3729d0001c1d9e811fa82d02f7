#include <stdio.h>
#include "platform.h"
#include "xgpio.h"  //GPIO PL(LED, BTN, Dip switch) ����ϱ� ���� header file
#include "xgpiops.h"  //GPIO PS ����ϱ� ���� header file (������ �Ǵ��� �����غ���)
#include "sleep.h"  //usleep ����� ���� header file

int main()
{
static XGpio input, output; //

//static XGpioPs psGpioInstance_ptr;  //PS�� GPIO�� ����ϱ� ���� pointer
//static XGpioPs_Config *GpioConfigPtr;      //PS�� GPIO ������ ���� pointer

int switch_data = 0;
int button_data = 0;
int Result = 6;      // ALU ����� ������ register

int xStatus;

int Readstatus = 0, OldReadstatus = 0;

init_platform();  //UART �� cache �ʱ�ȭ

//GPIO �ʱ�ȭ

      // AXI GPIO_SW Initialization //AXI GPIO_Button Initialization
      xStatus = XGpio_Initialize(&input,XPAR_AXI_GPIO_0_DEVICE_ID);
      if(XST_SUCCESS != xStatus)
      print("GPIO_SW INIT FAILDED \n\r");

      // AXI GPIO_LED Initialization
      xStatus = XGpio_Initialize(&output,XPAR_AXI_GPIO_1_DEVICE_ID);
      if(XST_SUCCESS != xStatus)
      print("GPIO_ INIT FAILDED \n\r");

//AXI GPIO ����� ����
       XGpio_SetDataDirection(&input,1,1);  // 1 : 1st channel, 1 : �Է�
      // XGpio_SetDataDirection(&input,2,1);  // 1 : 2st channel, 1 : �Է�
       XGpio_SetDataDirection(&output,1,0);  // 1 : single channel 0 : ���

             while(1)
                {
                //switch_data = XGpio_DiscreteRead(&input, 4);  //switch���� �Է��� �޾�

               XGpio_DiscreteWrite(&output, 1 , Result);   //�� data�� LED�� ���ش�

               //usleep(1000);
                }

                cleanup_platform();
                return 0;
            }
