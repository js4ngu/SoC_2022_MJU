// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "matrixMul.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic matrixMul::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic matrixMul::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<12> matrixMul::ap_ST_fsm_state1 = "1";
const sc_lv<12> matrixMul::ap_ST_fsm_state2 = "10";
const sc_lv<12> matrixMul::ap_ST_fsm_state3 = "100";
const sc_lv<12> matrixMul::ap_ST_fsm_state4 = "1000";
const sc_lv<12> matrixMul::ap_ST_fsm_state5 = "10000";
const sc_lv<12> matrixMul::ap_ST_fsm_state6 = "100000";
const sc_lv<12> matrixMul::ap_ST_fsm_state7 = "1000000";
const sc_lv<12> matrixMul::ap_ST_fsm_state8 = "10000000";
const sc_lv<12> matrixMul::ap_ST_fsm_state9 = "100000000";
const sc_lv<12> matrixMul::ap_ST_fsm_state10 = "1000000000";
const sc_lv<12> matrixMul::ap_ST_fsm_state11 = "10000000000";
const sc_lv<12> matrixMul::ap_ST_fsm_state12 = "100000000000";
const sc_lv<32> matrixMul::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> matrixMul::ap_const_lv32_1 = "1";
const sc_lv<1> matrixMul::ap_const_lv1_1 = "1";
const sc_lv<32> matrixMul::ap_const_lv32_2 = "10";
const sc_lv<32> matrixMul::ap_const_lv32_4 = "100";
const sc_lv<32> matrixMul::ap_const_lv32_5 = "101";
const sc_lv<32> matrixMul::ap_const_lv32_7 = "111";
const sc_lv<32> matrixMul::ap_const_lv32_8 = "1000";
const sc_lv<32> matrixMul::ap_const_lv32_9 = "1001";
const sc_lv<32> matrixMul::ap_const_lv32_A = "1010";
const sc_lv<32> matrixMul::ap_const_lv32_B = "1011";
const sc_lv<31> matrixMul::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<1> matrixMul::ap_const_lv1_0 = "0";
const sc_lv<32> matrixMul::ap_const_lv32_3 = "11";
const sc_lv<32> matrixMul::ap_const_lv32_6 = "110";
const sc_lv<31> matrixMul::ap_const_lv31_1 = "1";
const sc_lv<7> matrixMul::ap_const_lv7_0 = "0000000";
const sc_lv<10> matrixMul::ap_const_lv10_80 = "10000000";
const bool matrixMul::ap_const_boolean_1 = true;

matrixMul::matrixMul(sc_module_name name) : sc_module(name), mVcdFile(0) {
    a_U = new matrixMul_a("a_U");
    a_U->clk(ap_clk);
    a_U->reset(ap_rst);
    a_U->address0(a_address0);
    a_U->ce0(a_ce0);
    a_U->we0(a_we0);
    a_U->d0(in_r_q0);
    a_U->q0(a_q0);
    b_U = new matrixMul_a("b_U");
    b_U->clk(ap_clk);
    b_U->reset(ap_rst);
    b_U->address0(b_address0);
    b_U->ce0(b_ce0);
    b_U->we0(b_we0);
    b_U->d0(in_r_q0);
    b_U->q0(b_q0);
    matrixMul_mac_mulbkb_U1 = new matrixMul_mac_mulbkb<1,1,8,8,32,32>("matrixMul_mac_mulbkb_U1");
    matrixMul_mac_mulbkb_U1->din0(grp_fu_481_p0);
    matrixMul_mac_mulbkb_U1->din1(grp_fu_481_p1);
    matrixMul_mac_mulbkb_U1->din2(sum_reg_201);
    matrixMul_mac_mulbkb_U1->dout(grp_fu_481_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a_address0);
    sensitive << ( tmp_9_cast_reg_529 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_24_cast_fu_448_p1 );

    SC_METHOD(thread_a_ce0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_a_we0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_5_fu_372_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_5_fu_372_p2 );

    SC_METHOD(thread_b_address0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_20_cast_fu_364_p1 );
    sensitive << ( tmp_27_cast_fu_470_p1 );

    SC_METHOD(thread_b_ce0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_b_we0);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_c_address0);
    sensitive << ( c_addr_reg_602 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_c_ce0);
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_c_d0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( sum_reg_201 );

    SC_METHOD(thread_c_we0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_13_fu_428_p2 );

    SC_METHOD(thread_grp_fu_481_p0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( grp_fu_481_p00 );

    SC_METHOD(thread_grp_fu_481_p00);
    sensitive << ( b_load_reg_630 );

    SC_METHOD(thread_grp_fu_481_p1);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( grp_fu_481_p10 );

    SC_METHOD(thread_grp_fu_481_p10);
    sensitive << ( a_load_reg_625 );

    SC_METHOD(thread_i1_cast_fu_281_p1);
    sensitive << ( i1_reg_157 );

    SC_METHOD(thread_i3_cast_fu_368_p1);
    sensitive << ( i3_reg_179 );

    SC_METHOD(thread_i_1_fu_234_p2);
    sensitive << ( i_reg_135 );

    SC_METHOD(thread_i_2_fu_290_p2);
    sensitive << ( i1_reg_157 );

    SC_METHOD(thread_i_3_fu_377_p2);
    sensitive << ( i3_reg_179 );

    SC_METHOD(thread_i_cast_fu_225_p1);
    sensitive << ( i_reg_135 );

    SC_METHOD(thread_in_r_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_9_cast_fu_276_p1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_19_cast_fu_354_p1 );

    SC_METHOD(thread_in_r_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_j2_cast_fu_326_p1);
    sensitive << ( j2_reg_168 );

    SC_METHOD(thread_j4_cast_fu_395_p1);
    sensitive << ( j4_reg_190 );

    SC_METHOD(thread_j_1_fu_261_p2);
    sensitive << ( j_reg_146 );

    SC_METHOD(thread_j_2_fu_335_p2);
    sensitive << ( j2_reg_168 );

    SC_METHOD(thread_j_3_fu_404_p2);
    sensitive << ( j4_reg_190 );

    SC_METHOD(thread_j_cast_fu_252_p1);
    sensitive << ( j_reg_146 );

    SC_METHOD(thread_n_1_fu_433_p2);
    sensitive << ( n_reg_214 );

    SC_METHOD(thread_n_cast_fu_424_p1);
    sensitive << ( n_reg_214 );

    SC_METHOD(thread_tmp_10_fu_341_p1);
    sensitive << ( j2_reg_168 );

    SC_METHOD(thread_tmp_11_fu_399_p2);
    sensitive << ( lp );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( j4_cast_fu_395_p1 );

    SC_METHOD(thread_tmp_12_fu_345_p1);
    sensitive << ( j2_reg_168 );

    SC_METHOD(thread_tmp_13_fu_428_p2);
    sensitive << ( ln );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( n_cast_fu_424_p1 );

    SC_METHOD(thread_tmp_14_fu_349_p2);
    sensitive << ( tmp_16_cast2_reg_547 );
    sensitive << ( tmp_12_fu_345_p1 );

    SC_METHOD(thread_tmp_16_cast2_fu_306_p3);
    sensitive << ( tmp_7_fu_300_p2 );

    SC_METHOD(thread_tmp_16_fu_359_p2);
    sensitive << ( tmp_18_cast_reg_552 );
    sensitive << ( tmp_10_fu_341_p1 );

    SC_METHOD(thread_tmp_17_fu_383_p1);
    sensitive << ( i3_reg_179 );

    SC_METHOD(thread_tmp_18_cast_fu_318_p3);
    sensitive << ( tmp_8_fu_314_p1 );

    SC_METHOD(thread_tmp_18_fu_410_p1);
    sensitive << ( j4_reg_190 );

    SC_METHOD(thread_tmp_19_cast_fu_354_p1);
    sensitive << ( tmp_14_fu_349_p2 );

    SC_METHOD(thread_tmp_19_fu_414_p2);
    sensitive << ( tmp_22_cast_reg_583 );
    sensitive << ( tmp_18_fu_410_p1 );

    SC_METHOD(thread_tmp_1_fu_240_p1);
    sensitive << ( i_reg_135 );

    SC_METHOD(thread_tmp_20_cast_fu_364_p1);
    sensitive << ( tmp_16_reg_570 );

    SC_METHOD(thread_tmp_20_fu_439_p1);
    sensitive << ( n_reg_214 );

    SC_METHOD(thread_tmp_21_fu_443_p2);
    sensitive << ( tmp_22_cast_reg_583 );
    sensitive << ( tmp_20_fu_439_p1 );

    SC_METHOD(thread_tmp_22_cast_fu_387_p3);
    sensitive << ( tmp_17_fu_383_p1 );

    SC_METHOD(thread_tmp_22_fu_453_p1);
    sensitive << ( n_reg_214 );

    SC_METHOD(thread_tmp_23_cast_fu_419_p1);
    sensitive << ( tmp_19_fu_414_p2 );

    SC_METHOD(thread_tmp_23_fu_465_p2);
    sensitive << ( tmp_18_reg_597 );
    sensitive << ( tmp_26_cast_fu_457_p3 );

    SC_METHOD(thread_tmp_24_cast_fu_448_p1);
    sensitive << ( tmp_21_fu_443_p2 );

    SC_METHOD(thread_tmp_26_cast_fu_457_p3);
    sensitive << ( tmp_22_fu_453_p1 );

    SC_METHOD(thread_tmp_27_cast_fu_470_p1);
    sensitive << ( tmp_23_fu_465_p2 );

    SC_METHOD(thread_tmp_2_fu_256_p2);
    sensitive << ( ln );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_cast_fu_252_p1 );

    SC_METHOD(thread_tmp_3_fu_285_p2);
    sensitive << ( ln );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i1_cast_fu_281_p1 );

    SC_METHOD(thread_tmp_4_fu_267_p1);
    sensitive << ( j_reg_146 );

    SC_METHOD(thread_tmp_5_fu_372_p2);
    sensitive << ( lm );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( i3_cast_fu_368_p1 );

    SC_METHOD(thread_tmp_6_fu_296_p1);
    sensitive << ( i1_reg_157 );

    SC_METHOD(thread_tmp_7_fu_300_p2);
    sensitive << ( tmp_6_fu_296_p1 );

    SC_METHOD(thread_tmp_8_cast_fu_244_p3);
    sensitive << ( tmp_1_fu_240_p1 );

    SC_METHOD(thread_tmp_8_fu_314_p1);
    sensitive << ( i1_reg_157 );

    SC_METHOD(thread_tmp_9_cast_fu_276_p1);
    sensitive << ( tmp_9_fu_271_p2 );

    SC_METHOD(thread_tmp_9_fu_271_p2);
    sensitive << ( tmp_8_cast_reg_516 );
    sensitive << ( tmp_4_fu_267_p1 );

    SC_METHOD(thread_tmp_fu_229_p2);
    sensitive << ( lm );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_cast_fu_225_p1 );

    SC_METHOD(thread_tmp_s_fu_330_p2);
    sensitive << ( lp );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( j2_cast_fu_326_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_229_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_2_fu_256_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_3_fu_285_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_s_fu_330_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_5_fu_372_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_11_fu_399_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_13_fu_428_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "matrixMul_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, lm, "(port)lm");
    sc_trace(mVcdFile, ln, "(port)ln");
    sc_trace(mVcdFile, lp, "(port)lp");
    sc_trace(mVcdFile, in_r_address0, "(port)in_r_address0");
    sc_trace(mVcdFile, in_r_ce0, "(port)in_r_ce0");
    sc_trace(mVcdFile, in_r_q0, "(port)in_r_q0");
    sc_trace(mVcdFile, c_address0, "(port)c_address0");
    sc_trace(mVcdFile, c_ce0, "(port)c_ce0");
    sc_trace(mVcdFile, c_we0, "(port)c_we0");
    sc_trace(mVcdFile, c_d0, "(port)c_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_1_fu_234_p2, "i_1_fu_234_p2");
    sc_trace(mVcdFile, i_1_reg_511, "i_1_reg_511");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_8_cast_fu_244_p3, "tmp_8_cast_fu_244_p3");
    sc_trace(mVcdFile, tmp_8_cast_reg_516, "tmp_8_cast_reg_516");
    sc_trace(mVcdFile, tmp_fu_229_p2, "tmp_fu_229_p2");
    sc_trace(mVcdFile, j_1_fu_261_p2, "j_1_fu_261_p2");
    sc_trace(mVcdFile, j_1_reg_524, "j_1_reg_524");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_9_cast_fu_276_p1, "tmp_9_cast_fu_276_p1");
    sc_trace(mVcdFile, tmp_9_cast_reg_529, "tmp_9_cast_reg_529");
    sc_trace(mVcdFile, tmp_2_fu_256_p2, "tmp_2_fu_256_p2");
    sc_trace(mVcdFile, i_2_fu_290_p2, "i_2_fu_290_p2");
    sc_trace(mVcdFile, i_2_reg_542, "i_2_reg_542");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_16_cast2_fu_306_p3, "tmp_16_cast2_fu_306_p3");
    sc_trace(mVcdFile, tmp_16_cast2_reg_547, "tmp_16_cast2_reg_547");
    sc_trace(mVcdFile, tmp_3_fu_285_p2, "tmp_3_fu_285_p2");
    sc_trace(mVcdFile, tmp_18_cast_fu_318_p3, "tmp_18_cast_fu_318_p3");
    sc_trace(mVcdFile, tmp_18_cast_reg_552, "tmp_18_cast_reg_552");
    sc_trace(mVcdFile, j_2_fu_335_p2, "j_2_fu_335_p2");
    sc_trace(mVcdFile, j_2_reg_560, "j_2_reg_560");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_s_fu_330_p2, "tmp_s_fu_330_p2");
    sc_trace(mVcdFile, tmp_16_fu_359_p2, "tmp_16_fu_359_p2");
    sc_trace(mVcdFile, tmp_16_reg_570, "tmp_16_reg_570");
    sc_trace(mVcdFile, i_3_fu_377_p2, "i_3_fu_377_p2");
    sc_trace(mVcdFile, i_3_reg_578, "i_3_reg_578");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_22_cast_fu_387_p3, "tmp_22_cast_fu_387_p3");
    sc_trace(mVcdFile, tmp_22_cast_reg_583, "tmp_22_cast_reg_583");
    sc_trace(mVcdFile, tmp_5_fu_372_p2, "tmp_5_fu_372_p2");
    sc_trace(mVcdFile, j_3_fu_404_p2, "j_3_fu_404_p2");
    sc_trace(mVcdFile, j_3_reg_592, "j_3_reg_592");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, tmp_18_fu_410_p1, "tmp_18_fu_410_p1");
    sc_trace(mVcdFile, tmp_18_reg_597, "tmp_18_reg_597");
    sc_trace(mVcdFile, tmp_11_fu_399_p2, "tmp_11_fu_399_p2");
    sc_trace(mVcdFile, c_addr_reg_602, "c_addr_reg_602");
    sc_trace(mVcdFile, n_1_fu_433_p2, "n_1_fu_433_p2");
    sc_trace(mVcdFile, n_1_reg_610, "n_1_reg_610");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, tmp_13_fu_428_p2, "tmp_13_fu_428_p2");
    sc_trace(mVcdFile, a_q0, "a_q0");
    sc_trace(mVcdFile, a_load_reg_625, "a_load_reg_625");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, b_q0, "b_q0");
    sc_trace(mVcdFile, b_load_reg_630, "b_load_reg_630");
    sc_trace(mVcdFile, grp_fu_481_p3, "grp_fu_481_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, a_address0, "a_address0");
    sc_trace(mVcdFile, a_ce0, "a_ce0");
    sc_trace(mVcdFile, a_we0, "a_we0");
    sc_trace(mVcdFile, b_address0, "b_address0");
    sc_trace(mVcdFile, b_ce0, "b_ce0");
    sc_trace(mVcdFile, b_we0, "b_we0");
    sc_trace(mVcdFile, i_reg_135, "i_reg_135");
    sc_trace(mVcdFile, j_reg_146, "j_reg_146");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, i1_reg_157, "i1_reg_157");
    sc_trace(mVcdFile, j2_reg_168, "j2_reg_168");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, i3_reg_179, "i3_reg_179");
    sc_trace(mVcdFile, j4_reg_190, "j4_reg_190");
    sc_trace(mVcdFile, sum_reg_201, "sum_reg_201");
    sc_trace(mVcdFile, n_reg_214, "n_reg_214");
    sc_trace(mVcdFile, tmp_19_cast_fu_354_p1, "tmp_19_cast_fu_354_p1");
    sc_trace(mVcdFile, tmp_20_cast_fu_364_p1, "tmp_20_cast_fu_364_p1");
    sc_trace(mVcdFile, tmp_23_cast_fu_419_p1, "tmp_23_cast_fu_419_p1");
    sc_trace(mVcdFile, tmp_24_cast_fu_448_p1, "tmp_24_cast_fu_448_p1");
    sc_trace(mVcdFile, tmp_27_cast_fu_470_p1, "tmp_27_cast_fu_470_p1");
    sc_trace(mVcdFile, i_cast_fu_225_p1, "i_cast_fu_225_p1");
    sc_trace(mVcdFile, tmp_1_fu_240_p1, "tmp_1_fu_240_p1");
    sc_trace(mVcdFile, j_cast_fu_252_p1, "j_cast_fu_252_p1");
    sc_trace(mVcdFile, tmp_4_fu_267_p1, "tmp_4_fu_267_p1");
    sc_trace(mVcdFile, tmp_9_fu_271_p2, "tmp_9_fu_271_p2");
    sc_trace(mVcdFile, i1_cast_fu_281_p1, "i1_cast_fu_281_p1");
    sc_trace(mVcdFile, tmp_6_fu_296_p1, "tmp_6_fu_296_p1");
    sc_trace(mVcdFile, tmp_7_fu_300_p2, "tmp_7_fu_300_p2");
    sc_trace(mVcdFile, tmp_8_fu_314_p1, "tmp_8_fu_314_p1");
    sc_trace(mVcdFile, j2_cast_fu_326_p1, "j2_cast_fu_326_p1");
    sc_trace(mVcdFile, tmp_12_fu_345_p1, "tmp_12_fu_345_p1");
    sc_trace(mVcdFile, tmp_14_fu_349_p2, "tmp_14_fu_349_p2");
    sc_trace(mVcdFile, tmp_10_fu_341_p1, "tmp_10_fu_341_p1");
    sc_trace(mVcdFile, i3_cast_fu_368_p1, "i3_cast_fu_368_p1");
    sc_trace(mVcdFile, tmp_17_fu_383_p1, "tmp_17_fu_383_p1");
    sc_trace(mVcdFile, j4_cast_fu_395_p1, "j4_cast_fu_395_p1");
    sc_trace(mVcdFile, tmp_19_fu_414_p2, "tmp_19_fu_414_p2");
    sc_trace(mVcdFile, n_cast_fu_424_p1, "n_cast_fu_424_p1");
    sc_trace(mVcdFile, tmp_20_fu_439_p1, "tmp_20_fu_439_p1");
    sc_trace(mVcdFile, tmp_21_fu_443_p2, "tmp_21_fu_443_p2");
    sc_trace(mVcdFile, tmp_22_fu_453_p1, "tmp_22_fu_453_p1");
    sc_trace(mVcdFile, tmp_26_cast_fu_457_p3, "tmp_26_cast_fu_457_p3");
    sc_trace(mVcdFile, tmp_23_fu_465_p2, "tmp_23_fu_465_p2");
    sc_trace(mVcdFile, grp_fu_481_p0, "grp_fu_481_p0");
    sc_trace(mVcdFile, grp_fu_481_p1, "grp_fu_481_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, grp_fu_481_p00, "grp_fu_481_p00");
    sc_trace(mVcdFile, grp_fu_481_p10, "grp_fu_481_p10");
#endif

    }
    mHdltvinHandle.open("matrixMul.hdltvin.dat");
    mHdltvoutHandle.open("matrixMul.hdltvout.dat");
}

matrixMul::~matrixMul() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete a_U;
    delete b_U;
    delete matrixMul_mac_mulbkb_U1;
}

void matrixMul::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(tmp_fu_229_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        i1_reg_157 = ap_const_lv31_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(tmp_s_fu_330_p2.read(), ap_const_lv1_0))) {
        i1_reg_157 = i_2_reg_542.read();
    }
    if ((esl_seteq<1,1,1>(tmp_3_fu_285_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        i3_reg_179 = ap_const_lv31_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                esl_seteq<1,1,1>(tmp_11_fu_399_p2.read(), ap_const_lv1_0))) {
        i3_reg_179 = i_3_reg_578.read();
    }
    if ((esl_seteq<1,1,1>(tmp_2_fu_256_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        i_reg_135 = i_1_reg_511.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_135 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(tmp_3_fu_285_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        j2_reg_168 = ap_const_lv31_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        j2_reg_168 = j_2_reg_560.read();
    }
    if ((esl_seteq<1,1,1>(tmp_5_fu_372_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        j4_reg_190 = ap_const_lv31_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(tmp_13_fu_428_p2.read(), ap_const_lv1_0))) {
        j4_reg_190 = j_3_reg_592.read();
    }
    if ((esl_seteq<1,1,1>(tmp_fu_229_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        j_reg_146 = ap_const_lv31_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        j_reg_146 = j_1_reg_524.read();
    }
    if ((esl_seteq<1,1,1>(tmp_11_fu_399_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        n_reg_214 = ap_const_lv31_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        n_reg_214 = n_1_reg_610.read();
    }
    if ((esl_seteq<1,1,1>(tmp_11_fu_399_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        sum_reg_201 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        sum_reg_201 = grp_fu_481_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        a_load_reg_625 = a_q0.read();
        b_load_reg_630 = b_q0.read();
    }
    if ((esl_seteq<1,1,1>(tmp_11_fu_399_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        c_addr_reg_602 =  (sc_lv<14>) (tmp_23_cast_fu_419_p1.read());
        tmp_18_reg_597 = tmp_18_fu_410_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_1_reg_511 = i_1_fu_234_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_2_reg_542 = i_2_fu_290_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        i_3_reg_578 = i_3_fu_377_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_1_reg_524 = j_1_fu_261_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        j_2_reg_560 = j_2_fu_335_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        j_3_reg_592 = j_3_fu_404_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        n_1_reg_610 = n_1_fu_433_p2.read();
    }
    if ((esl_seteq<1,1,1>(tmp_3_fu_285_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        tmp_16_cast2_reg_547 = tmp_16_cast2_fu_306_p3.read();
        tmp_18_cast_reg_552 = tmp_18_cast_fu_318_p3.read();
    }
    if ((esl_seteq<1,1,1>(tmp_s_fu_330_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        tmp_16_reg_570 = tmp_16_fu_359_p2.read();
    }
    if ((esl_seteq<1,1,1>(tmp_5_fu_372_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        tmp_22_cast_reg_583 = tmp_22_cast_fu_387_p3.read();
    }
    if ((esl_seteq<1,1,1>(tmp_fu_229_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        tmp_8_cast_reg_516 = tmp_8_cast_fu_244_p3.read();
    }
    if ((esl_seteq<1,1,1>(tmp_2_fu_256_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        tmp_9_cast_reg_529 = tmp_9_cast_fu_276_p1.read();
    }
}

void matrixMul::thread_a_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        a_address0 =  (sc_lv<14>) (tmp_24_cast_fu_448_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        a_address0 =  (sc_lv<14>) (tmp_9_cast_reg_529.read());
    } else {
        a_address0 = "XXXXXXXXXXXXXX";
    }
}

void matrixMul::thread_a_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        a_ce0 = ap_const_logic_1;
    } else {
        a_ce0 = ap_const_logic_0;
    }
}

void matrixMul::thread_a_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        a_we0 = ap_const_logic_1;
    } else {
        a_we0 = ap_const_logic_0;
    }
}

void matrixMul::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void matrixMul::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void matrixMul::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void matrixMul::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void matrixMul::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void matrixMul::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void matrixMul::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void matrixMul::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void matrixMul::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void matrixMul::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void matrixMul::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void matrixMul::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void matrixMul::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(tmp_5_fu_372_p2.read(), ap_const_lv1_0))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void matrixMul::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void matrixMul::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(tmp_5_fu_372_p2.read(), ap_const_lv1_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void matrixMul::thread_b_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        b_address0 =  (sc_lv<14>) (tmp_27_cast_fu_470_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        b_address0 =  (sc_lv<14>) (tmp_20_cast_fu_364_p1.read());
    } else {
        b_address0 = "XXXXXXXXXXXXXX";
    }
}

void matrixMul::thread_b_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        b_ce0 = ap_const_logic_1;
    } else {
        b_ce0 = ap_const_logic_0;
    }
}

void matrixMul::thread_b_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        b_we0 = ap_const_logic_1;
    } else {
        b_we0 = ap_const_logic_0;
    }
}

void matrixMul::thread_c_address0() {
    c_address0 = c_addr_reg_602.read();
}

void matrixMul::thread_c_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        c_ce0 = ap_const_logic_1;
    } else {
        c_ce0 = ap_const_logic_0;
    }
}

void matrixMul::thread_c_d0() {
    c_d0 = sum_reg_201.read();
}

void matrixMul::thread_c_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(tmp_13_fu_428_p2.read(), ap_const_lv1_0))) {
        c_we0 = ap_const_logic_1;
    } else {
        c_we0 = ap_const_logic_0;
    }
}

void matrixMul::thread_grp_fu_481_p0() {
    grp_fu_481_p0 =  (sc_lv<8>) (grp_fu_481_p00.read());
}

void matrixMul::thread_grp_fu_481_p00() {
    grp_fu_481_p00 = esl_zext<16,8>(b_load_reg_630.read());
}

void matrixMul::thread_grp_fu_481_p1() {
    grp_fu_481_p1 =  (sc_lv<8>) (grp_fu_481_p10.read());
}

void matrixMul::thread_grp_fu_481_p10() {
    grp_fu_481_p10 = esl_zext<16,8>(a_load_reg_625.read());
}

void matrixMul::thread_i1_cast_fu_281_p1() {
    i1_cast_fu_281_p1 = esl_zext<32,31>(i1_reg_157.read());
}

void matrixMul::thread_i3_cast_fu_368_p1() {
    i3_cast_fu_368_p1 = esl_zext<32,31>(i3_reg_179.read());
}

void matrixMul::thread_i_1_fu_234_p2() {
    i_1_fu_234_p2 = (!i_reg_135.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(i_reg_135.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void matrixMul::thread_i_2_fu_290_p2() {
    i_2_fu_290_p2 = (!i1_reg_157.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(i1_reg_157.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void matrixMul::thread_i_3_fu_377_p2() {
    i_3_fu_377_p2 = (!i3_reg_179.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(i3_reg_179.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void matrixMul::thread_i_cast_fu_225_p1() {
    i_cast_fu_225_p1 = esl_zext<32,31>(i_reg_135.read());
}

void matrixMul::thread_in_r_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        in_r_address0 =  (sc_lv<15>) (tmp_19_cast_fu_354_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        in_r_address0 =  (sc_lv<15>) (tmp_9_cast_fu_276_p1.read());
    } else {
        in_r_address0 =  (sc_lv<15>) ("XXXXXXXXXXXXXXX");
    }
}

void matrixMul::thread_in_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        in_r_ce0 = ap_const_logic_1;
    } else {
        in_r_ce0 = ap_const_logic_0;
    }
}

void matrixMul::thread_j2_cast_fu_326_p1() {
    j2_cast_fu_326_p1 = esl_zext<32,31>(j2_reg_168.read());
}

void matrixMul::thread_j4_cast_fu_395_p1() {
    j4_cast_fu_395_p1 = esl_zext<32,31>(j4_reg_190.read());
}

void matrixMul::thread_j_1_fu_261_p2() {
    j_1_fu_261_p2 = (!j_reg_146.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(j_reg_146.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void matrixMul::thread_j_2_fu_335_p2() {
    j_2_fu_335_p2 = (!j2_reg_168.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(j2_reg_168.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void matrixMul::thread_j_3_fu_404_p2() {
    j_3_fu_404_p2 = (!j4_reg_190.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(j4_reg_190.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void matrixMul::thread_j_cast_fu_252_p1() {
    j_cast_fu_252_p1 = esl_zext<32,31>(j_reg_146.read());
}

void matrixMul::thread_n_1_fu_433_p2() {
    n_1_fu_433_p2 = (!n_reg_214.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(n_reg_214.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void matrixMul::thread_n_cast_fu_424_p1() {
    n_cast_fu_424_p1 = esl_zext<32,31>(n_reg_214.read());
}

void matrixMul::thread_tmp_10_fu_341_p1() {
    tmp_10_fu_341_p1 = j2_reg_168.read().range(16-1, 0);
}

void matrixMul::thread_tmp_11_fu_399_p2() {
    tmp_11_fu_399_p2 = (!j4_cast_fu_395_p1.read().is_01() || !lp.read().is_01())? sc_lv<1>(): (sc_bigint<32>(j4_cast_fu_395_p1.read()) < sc_bigint<32>(lp.read()));
}

void matrixMul::thread_tmp_12_fu_345_p1() {
    tmp_12_fu_345_p1 = j2_reg_168.read().range(17-1, 0);
}

void matrixMul::thread_tmp_13_fu_428_p2() {
    tmp_13_fu_428_p2 = (!n_cast_fu_424_p1.read().is_01() || !ln.read().is_01())? sc_lv<1>(): (sc_bigint<32>(n_cast_fu_424_p1.read()) < sc_bigint<32>(ln.read()));
}

void matrixMul::thread_tmp_14_fu_349_p2() {
    tmp_14_fu_349_p2 = (!tmp_16_cast2_reg_547.read().is_01() || !tmp_12_fu_345_p1.read().is_01())? sc_lv<17>(): (sc_biguint<17>(tmp_16_cast2_reg_547.read()) + sc_biguint<17>(tmp_12_fu_345_p1.read()));
}

void matrixMul::thread_tmp_16_cast2_fu_306_p3() {
    tmp_16_cast2_fu_306_p3 = esl_concat<10,7>(tmp_7_fu_300_p2.read(), ap_const_lv7_0);
}

void matrixMul::thread_tmp_16_fu_359_p2() {
    tmp_16_fu_359_p2 = (!tmp_18_cast_reg_552.read().is_01() || !tmp_10_fu_341_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(tmp_18_cast_reg_552.read()) + sc_biguint<16>(tmp_10_fu_341_p1.read()));
}

void matrixMul::thread_tmp_17_fu_383_p1() {
    tmp_17_fu_383_p1 = i3_reg_179.read().range(9-1, 0);
}

void matrixMul::thread_tmp_18_cast_fu_318_p3() {
    tmp_18_cast_fu_318_p3 = esl_concat<9,7>(tmp_8_fu_314_p1.read(), ap_const_lv7_0);
}

void matrixMul::thread_tmp_18_fu_410_p1() {
    tmp_18_fu_410_p1 = j4_reg_190.read().range(16-1, 0);
}

void matrixMul::thread_tmp_19_cast_fu_354_p1() {
    tmp_19_cast_fu_354_p1 = esl_sext<64,17>(tmp_14_fu_349_p2.read());
}

void matrixMul::thread_tmp_19_fu_414_p2() {
    tmp_19_fu_414_p2 = (!tmp_22_cast_reg_583.read().is_01() || !tmp_18_fu_410_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(tmp_22_cast_reg_583.read()) + sc_biguint<16>(tmp_18_fu_410_p1.read()));
}

void matrixMul::thread_tmp_1_fu_240_p1() {
    tmp_1_fu_240_p1 = i_reg_135.read().range(10-1, 0);
}

void matrixMul::thread_tmp_20_cast_fu_364_p1() {
    tmp_20_cast_fu_364_p1 = esl_zext<64,16>(tmp_16_reg_570.read());
}

void matrixMul::thread_tmp_20_fu_439_p1() {
    tmp_20_fu_439_p1 = n_reg_214.read().range(16-1, 0);
}

void matrixMul::thread_tmp_21_fu_443_p2() {
    tmp_21_fu_443_p2 = (!tmp_22_cast_reg_583.read().is_01() || !tmp_20_fu_439_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(tmp_22_cast_reg_583.read()) + sc_biguint<16>(tmp_20_fu_439_p1.read()));
}

void matrixMul::thread_tmp_22_cast_fu_387_p3() {
    tmp_22_cast_fu_387_p3 = esl_concat<9,7>(tmp_17_fu_383_p1.read(), ap_const_lv7_0);
}

void matrixMul::thread_tmp_22_fu_453_p1() {
    tmp_22_fu_453_p1 = n_reg_214.read().range(9-1, 0);
}

void matrixMul::thread_tmp_23_cast_fu_419_p1() {
    tmp_23_cast_fu_419_p1 = esl_zext<64,16>(tmp_19_fu_414_p2.read());
}

void matrixMul::thread_tmp_23_fu_465_p2() {
    tmp_23_fu_465_p2 = (!tmp_26_cast_fu_457_p3.read().is_01() || !tmp_18_reg_597.read().is_01())? sc_lv<16>(): (sc_biguint<16>(tmp_26_cast_fu_457_p3.read()) + sc_biguint<16>(tmp_18_reg_597.read()));
}

void matrixMul::thread_tmp_24_cast_fu_448_p1() {
    tmp_24_cast_fu_448_p1 = esl_zext<64,16>(tmp_21_fu_443_p2.read());
}

void matrixMul::thread_tmp_26_cast_fu_457_p3() {
    tmp_26_cast_fu_457_p3 = esl_concat<9,7>(tmp_22_fu_453_p1.read(), ap_const_lv7_0);
}

void matrixMul::thread_tmp_27_cast_fu_470_p1() {
    tmp_27_cast_fu_470_p1 = esl_zext<64,16>(tmp_23_fu_465_p2.read());
}

void matrixMul::thread_tmp_2_fu_256_p2() {
    tmp_2_fu_256_p2 = (!j_cast_fu_252_p1.read().is_01() || !ln.read().is_01())? sc_lv<1>(): (sc_bigint<32>(j_cast_fu_252_p1.read()) < sc_bigint<32>(ln.read()));
}

void matrixMul::thread_tmp_3_fu_285_p2() {
    tmp_3_fu_285_p2 = (!i1_cast_fu_281_p1.read().is_01() || !ln.read().is_01())? sc_lv<1>(): (sc_bigint<32>(i1_cast_fu_281_p1.read()) < sc_bigint<32>(ln.read()));
}

void matrixMul::thread_tmp_4_fu_267_p1() {
    tmp_4_fu_267_p1 = j_reg_146.read().range(17-1, 0);
}

void matrixMul::thread_tmp_5_fu_372_p2() {
    tmp_5_fu_372_p2 = (!i3_cast_fu_368_p1.read().is_01() || !lm.read().is_01())? sc_lv<1>(): (sc_bigint<32>(i3_cast_fu_368_p1.read()) < sc_bigint<32>(lm.read()));
}

void matrixMul::thread_tmp_6_fu_296_p1() {
    tmp_6_fu_296_p1 = i1_reg_157.read().range(10-1, 0);
}

void matrixMul::thread_tmp_7_fu_300_p2() {
    tmp_7_fu_300_p2 = (!ap_const_lv10_80.is_01() || !tmp_6_fu_296_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_80) + sc_biguint<10>(tmp_6_fu_296_p1.read()));
}

void matrixMul::thread_tmp_8_cast_fu_244_p3() {
    tmp_8_cast_fu_244_p3 = esl_concat<10,7>(tmp_1_fu_240_p1.read(), ap_const_lv7_0);
}

void matrixMul::thread_tmp_8_fu_314_p1() {
    tmp_8_fu_314_p1 = i1_reg_157.read().range(9-1, 0);
}

void matrixMul::thread_tmp_9_cast_fu_276_p1() {
    tmp_9_cast_fu_276_p1 = esl_zext<64,17>(tmp_9_fu_271_p2.read());
}

void matrixMul::thread_tmp_9_fu_271_p2() {
    tmp_9_fu_271_p2 = (!tmp_8_cast_reg_516.read().is_01() || !tmp_4_fu_267_p1.read().is_01())? sc_lv<17>(): (sc_biguint<17>(tmp_8_cast_reg_516.read()) + sc_biguint<17>(tmp_4_fu_267_p1.read()));
}

void matrixMul::thread_tmp_fu_229_p2() {
    tmp_fu_229_p2 = (!i_cast_fu_225_p1.read().is_01() || !lm.read().is_01())? sc_lv<1>(): (sc_bigint<32>(i_cast_fu_225_p1.read()) < sc_bigint<32>(lm.read()));
}

void matrixMul::thread_tmp_s_fu_330_p2() {
    tmp_s_fu_330_p2 = (!j2_cast_fu_326_p1.read().is_01() || !lp.read().is_01())? sc_lv<1>(): (sc_bigint<32>(j2_cast_fu_326_p1.read()) < sc_bigint<32>(lp.read()));
}

void matrixMul::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(tmp_fu_229_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(tmp_2_fu_256_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(tmp_3_fu_285_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(tmp_s_fu_330_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(tmp_5_fu_372_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(tmp_11_fu_399_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(tmp_13_fu_428_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<12>) ("XXXXXXXXXXXX");
            break;
    }
}

void matrixMul::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"lm\" :  \"" << lm.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ln\" :  \"" << ln.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"lp\" :  \"" << lp.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_r_address0\" :  \"" << in_r_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_r_ce0\" :  \"" << in_r_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_q0\" :  \"" << in_r_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_address0\" :  \"" << c_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_ce0\" :  \"" << c_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_we0\" :  \"" << c_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_d0\" :  \"" << c_d0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

