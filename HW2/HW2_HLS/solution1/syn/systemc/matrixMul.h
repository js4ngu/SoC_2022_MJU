// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _matrixMul_HH_
#define _matrixMul_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "matrixMul_mac_mulbkb.h"
#include "matrixMul_a.h"

namespace ap_rtl {

struct matrixMul : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > lm;
    sc_in< sc_lv<32> > ln;
    sc_in< sc_lv<32> > lp;
    sc_out< sc_lv<15> > in_r_address0;
    sc_out< sc_logic > in_r_ce0;
    sc_in< sc_lv<8> > in_r_q0;
    sc_out< sc_lv<14> > c_address0;
    sc_out< sc_logic > c_ce0;
    sc_out< sc_logic > c_we0;
    sc_out< sc_lv<32> > c_d0;


    // Module declarations
    matrixMul(sc_module_name name);
    SC_HAS_PROCESS(matrixMul);

    ~matrixMul();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    matrixMul_a* a_U;
    matrixMul_a* b_U;
    matrixMul_mac_mulbkb<1,1,8,8,32,32>* matrixMul_mac_mulbkb_U1;
    sc_signal< sc_lv<12> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<31> > i_1_fu_234_p2;
    sc_signal< sc_lv<31> > i_1_reg_511;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<17> > tmp_8_cast_fu_244_p3;
    sc_signal< sc_lv<17> > tmp_8_cast_reg_516;
    sc_signal< sc_lv<1> > tmp_fu_229_p2;
    sc_signal< sc_lv<31> > j_1_fu_261_p2;
    sc_signal< sc_lv<31> > j_1_reg_524;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<64> > tmp_9_cast_fu_276_p1;
    sc_signal< sc_lv<64> > tmp_9_cast_reg_529;
    sc_signal< sc_lv<1> > tmp_2_fu_256_p2;
    sc_signal< sc_lv<31> > i_2_fu_290_p2;
    sc_signal< sc_lv<31> > i_2_reg_542;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<17> > tmp_16_cast2_fu_306_p3;
    sc_signal< sc_lv<17> > tmp_16_cast2_reg_547;
    sc_signal< sc_lv<1> > tmp_3_fu_285_p2;
    sc_signal< sc_lv<16> > tmp_18_cast_fu_318_p3;
    sc_signal< sc_lv<16> > tmp_18_cast_reg_552;
    sc_signal< sc_lv<31> > j_2_fu_335_p2;
    sc_signal< sc_lv<31> > j_2_reg_560;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > tmp_s_fu_330_p2;
    sc_signal< sc_lv<16> > tmp_16_fu_359_p2;
    sc_signal< sc_lv<16> > tmp_16_reg_570;
    sc_signal< sc_lv<31> > i_3_fu_377_p2;
    sc_signal< sc_lv<31> > i_3_reg_578;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<16> > tmp_22_cast_fu_387_p3;
    sc_signal< sc_lv<16> > tmp_22_cast_reg_583;
    sc_signal< sc_lv<1> > tmp_5_fu_372_p2;
    sc_signal< sc_lv<31> > j_3_fu_404_p2;
    sc_signal< sc_lv<31> > j_3_reg_592;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<16> > tmp_18_fu_410_p1;
    sc_signal< sc_lv<16> > tmp_18_reg_597;
    sc_signal< sc_lv<1> > tmp_11_fu_399_p2;
    sc_signal< sc_lv<14> > c_addr_reg_602;
    sc_signal< sc_lv<31> > n_1_fu_433_p2;
    sc_signal< sc_lv<31> > n_1_reg_610;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<1> > tmp_13_fu_428_p2;
    sc_signal< sc_lv<8> > a_q0;
    sc_signal< sc_lv<8> > a_load_reg_625;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<8> > b_q0;
    sc_signal< sc_lv<8> > b_load_reg_630;
    sc_signal< sc_lv<32> > grp_fu_481_p3;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<14> > a_address0;
    sc_signal< sc_logic > a_ce0;
    sc_signal< sc_logic > a_we0;
    sc_signal< sc_lv<14> > b_address0;
    sc_signal< sc_logic > b_ce0;
    sc_signal< sc_logic > b_we0;
    sc_signal< sc_lv<31> > i_reg_135;
    sc_signal< sc_lv<31> > j_reg_146;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<31> > i1_reg_157;
    sc_signal< sc_lv<31> > j2_reg_168;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<31> > i3_reg_179;
    sc_signal< sc_lv<31> > j4_reg_190;
    sc_signal< sc_lv<32> > sum_reg_201;
    sc_signal< sc_lv<31> > n_reg_214;
    sc_signal< sc_lv<64> > tmp_19_cast_fu_354_p1;
    sc_signal< sc_lv<64> > tmp_20_cast_fu_364_p1;
    sc_signal< sc_lv<64> > tmp_23_cast_fu_419_p1;
    sc_signal< sc_lv<64> > tmp_24_cast_fu_448_p1;
    sc_signal< sc_lv<64> > tmp_27_cast_fu_470_p1;
    sc_signal< sc_lv<32> > i_cast_fu_225_p1;
    sc_signal< sc_lv<10> > tmp_1_fu_240_p1;
    sc_signal< sc_lv<32> > j_cast_fu_252_p1;
    sc_signal< sc_lv<17> > tmp_4_fu_267_p1;
    sc_signal< sc_lv<17> > tmp_9_fu_271_p2;
    sc_signal< sc_lv<32> > i1_cast_fu_281_p1;
    sc_signal< sc_lv<10> > tmp_6_fu_296_p1;
    sc_signal< sc_lv<10> > tmp_7_fu_300_p2;
    sc_signal< sc_lv<9> > tmp_8_fu_314_p1;
    sc_signal< sc_lv<32> > j2_cast_fu_326_p1;
    sc_signal< sc_lv<17> > tmp_12_fu_345_p1;
    sc_signal< sc_lv<17> > tmp_14_fu_349_p2;
    sc_signal< sc_lv<16> > tmp_10_fu_341_p1;
    sc_signal< sc_lv<32> > i3_cast_fu_368_p1;
    sc_signal< sc_lv<9> > tmp_17_fu_383_p1;
    sc_signal< sc_lv<32> > j4_cast_fu_395_p1;
    sc_signal< sc_lv<16> > tmp_19_fu_414_p2;
    sc_signal< sc_lv<32> > n_cast_fu_424_p1;
    sc_signal< sc_lv<16> > tmp_20_fu_439_p1;
    sc_signal< sc_lv<16> > tmp_21_fu_443_p2;
    sc_signal< sc_lv<9> > tmp_22_fu_453_p1;
    sc_signal< sc_lv<16> > tmp_26_cast_fu_457_p3;
    sc_signal< sc_lv<16> > tmp_23_fu_465_p2;
    sc_signal< sc_lv<8> > grp_fu_481_p0;
    sc_signal< sc_lv<8> > grp_fu_481_p1;
    sc_signal< sc_lv<12> > ap_NS_fsm;
    sc_signal< sc_lv<16> > grp_fu_481_p00;
    sc_signal< sc_lv<16> > grp_fu_481_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<12> ap_ST_fsm_state1;
    static const sc_lv<12> ap_ST_fsm_state2;
    static const sc_lv<12> ap_ST_fsm_state3;
    static const sc_lv<12> ap_ST_fsm_state4;
    static const sc_lv<12> ap_ST_fsm_state5;
    static const sc_lv<12> ap_ST_fsm_state6;
    static const sc_lv<12> ap_ST_fsm_state7;
    static const sc_lv<12> ap_ST_fsm_state8;
    static const sc_lv<12> ap_ST_fsm_state9;
    static const sc_lv<12> ap_ST_fsm_state10;
    static const sc_lv<12> ap_ST_fsm_state11;
    static const sc_lv<12> ap_ST_fsm_state12;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<31> ap_const_lv31_1;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<10> ap_const_lv10_80;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_a_address0();
    void thread_a_ce0();
    void thread_a_we0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_b_address0();
    void thread_b_ce0();
    void thread_b_we0();
    void thread_c_address0();
    void thread_c_ce0();
    void thread_c_d0();
    void thread_c_we0();
    void thread_grp_fu_481_p0();
    void thread_grp_fu_481_p00();
    void thread_grp_fu_481_p1();
    void thread_grp_fu_481_p10();
    void thread_i1_cast_fu_281_p1();
    void thread_i3_cast_fu_368_p1();
    void thread_i_1_fu_234_p2();
    void thread_i_2_fu_290_p2();
    void thread_i_3_fu_377_p2();
    void thread_i_cast_fu_225_p1();
    void thread_in_r_address0();
    void thread_in_r_ce0();
    void thread_j2_cast_fu_326_p1();
    void thread_j4_cast_fu_395_p1();
    void thread_j_1_fu_261_p2();
    void thread_j_2_fu_335_p2();
    void thread_j_3_fu_404_p2();
    void thread_j_cast_fu_252_p1();
    void thread_n_1_fu_433_p2();
    void thread_n_cast_fu_424_p1();
    void thread_tmp_10_fu_341_p1();
    void thread_tmp_11_fu_399_p2();
    void thread_tmp_12_fu_345_p1();
    void thread_tmp_13_fu_428_p2();
    void thread_tmp_14_fu_349_p2();
    void thread_tmp_16_cast2_fu_306_p3();
    void thread_tmp_16_fu_359_p2();
    void thread_tmp_17_fu_383_p1();
    void thread_tmp_18_cast_fu_318_p3();
    void thread_tmp_18_fu_410_p1();
    void thread_tmp_19_cast_fu_354_p1();
    void thread_tmp_19_fu_414_p2();
    void thread_tmp_1_fu_240_p1();
    void thread_tmp_20_cast_fu_364_p1();
    void thread_tmp_20_fu_439_p1();
    void thread_tmp_21_fu_443_p2();
    void thread_tmp_22_cast_fu_387_p3();
    void thread_tmp_22_fu_453_p1();
    void thread_tmp_23_cast_fu_419_p1();
    void thread_tmp_23_fu_465_p2();
    void thread_tmp_24_cast_fu_448_p1();
    void thread_tmp_26_cast_fu_457_p3();
    void thread_tmp_27_cast_fu_470_p1();
    void thread_tmp_2_fu_256_p2();
    void thread_tmp_3_fu_285_p2();
    void thread_tmp_4_fu_267_p1();
    void thread_tmp_5_fu_372_p2();
    void thread_tmp_6_fu_296_p1();
    void thread_tmp_7_fu_300_p2();
    void thread_tmp_8_cast_fu_244_p3();
    void thread_tmp_8_fu_314_p1();
    void thread_tmp_9_cast_fu_276_p1();
    void thread_tmp_9_fu_271_p2();
    void thread_tmp_fu_229_p2();
    void thread_tmp_s_fu_330_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
