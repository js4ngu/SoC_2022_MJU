// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _matrixMul_HH_
#define _matrixMul_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "matrixMul_mac_mulbkb.h"
#include "matrixMul_a.h"
#include "matrixMul_AXILiteS_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_AXILITES_ADDR_WIDTH = 6,
         unsigned int C_S_AXI_AXILITES_DATA_WIDTH = 32>
struct matrixMul : public sc_module {
    // Port declarations 29
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<8> > in_r_TDATA;
    sc_in< sc_logic > in_r_TVALID;
    sc_out< sc_logic > in_r_TREADY;
    sc_out< sc_lv<32> > c_TDATA;
    sc_out< sc_logic > c_TVALID;
    sc_in< sc_logic > c_TREADY;
    sc_in< sc_logic > s_axi_AXILiteS_AWVALID;
    sc_out< sc_logic > s_axi_AXILiteS_AWREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_AWADDR;
    sc_in< sc_logic > s_axi_AXILiteS_WVALID;
    sc_out< sc_logic > s_axi_AXILiteS_WREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_WDATA;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH/8> > s_axi_AXILiteS_WSTRB;
    sc_in< sc_logic > s_axi_AXILiteS_ARVALID;
    sc_out< sc_logic > s_axi_AXILiteS_ARREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_ARADDR;
    sc_out< sc_logic > s_axi_AXILiteS_RVALID;
    sc_in< sc_logic > s_axi_AXILiteS_RREADY;
    sc_out< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_RDATA;
    sc_out< sc_lv<2> > s_axi_AXILiteS_RRESP;
    sc_out< sc_logic > s_axi_AXILiteS_BVALID;
    sc_in< sc_logic > s_axi_AXILiteS_BREADY;
    sc_out< sc_lv<2> > s_axi_AXILiteS_BRESP;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    matrixMul(sc_module_name name);
    SC_HAS_PROCESS(matrixMul);

    ~matrixMul();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    matrixMul_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>* matrixMul_AXILiteS_s_axi_U;
    matrixMul_a* a_U;
    matrixMul_a* b_U;
    matrixMul_mac_mulbkb<1,1,8,8,32,32>* matrixMul_mac_mulbkb_U1;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<14> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > lm;
    sc_signal< sc_lv<32> > lm_0_data_reg;
    sc_signal< sc_logic > lm_0_vld_reg;
    sc_signal< sc_logic > lm_0_ack_out;
    sc_signal< sc_lv<32> > ln;
    sc_signal< sc_lv<32> > ln_0_data_reg;
    sc_signal< sc_logic > ln_0_vld_reg;
    sc_signal< sc_logic > ln_0_ack_out;
    sc_signal< sc_lv<32> > lp;
    sc_signal< sc_lv<32> > lp_0_data_reg;
    sc_signal< sc_logic > lp_0_vld_reg;
    sc_signal< sc_logic > lp_0_ack_out;
    sc_signal< sc_lv<8> > in_r_0_data_out;
    sc_signal< sc_logic > in_r_0_vld_in;
    sc_signal< sc_logic > in_r_0_vld_out;
    sc_signal< sc_logic > in_r_0_ack_in;
    sc_signal< sc_logic > in_r_0_ack_out;
    sc_signal< sc_lv<8> > in_r_0_payload_A;
    sc_signal< sc_lv<8> > in_r_0_payload_B;
    sc_signal< sc_logic > in_r_0_sel_rd;
    sc_signal< sc_logic > in_r_0_sel_wr;
    sc_signal< sc_logic > in_r_0_sel;
    sc_signal< sc_logic > in_r_0_load_A;
    sc_signal< sc_logic > in_r_0_load_B;
    sc_signal< sc_lv<2> > in_r_0_state;
    sc_signal< sc_logic > in_r_0_state_cmp_full;
    sc_signal< sc_lv<32> > c_1_data_out;
    sc_signal< sc_logic > c_1_vld_in;
    sc_signal< sc_logic > c_1_vld_out;
    sc_signal< sc_logic > c_1_ack_in;
    sc_signal< sc_logic > c_1_ack_out;
    sc_signal< sc_lv<32> > c_1_payload_A;
    sc_signal< sc_lv<32> > c_1_payload_B;
    sc_signal< sc_logic > c_1_sel_rd;
    sc_signal< sc_logic > c_1_sel_wr;
    sc_signal< sc_logic > c_1_sel;
    sc_signal< sc_logic > c_1_load_A;
    sc_signal< sc_logic > c_1_load_B;
    sc_signal< sc_lv<2> > c_1_state;
    sc_signal< sc_logic > c_1_state_cmp_full;
    sc_signal< sc_logic > in_r_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > c_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<1> > tmp_11_fu_378_p2;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<32> > lp_read_reg_439;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<32> > ln_read_reg_445;
    sc_signal< sc_lv<32> > lm_read_reg_452;
    sc_signal< sc_lv<31> > i_1_fu_227_p2;
    sc_signal< sc_lv<31> > i_1_reg_461;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<16> > tmp_7_cast_fu_237_p3;
    sc_signal< sc_lv<16> > tmp_7_cast_reg_466;
    sc_signal< sc_lv<1> > tmp_fu_222_p2;
    sc_signal< sc_lv<31> > j_1_fu_254_p2;
    sc_signal< sc_lv<31> > j_1_reg_474;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<16> > tmp_9_fu_264_p2;
    sc_signal< sc_lv<16> > tmp_9_reg_479;
    sc_signal< sc_lv<1> > tmp_2_fu_249_p2;
    sc_signal< sc_lv<31> > i_2_fu_282_p2;
    sc_signal< sc_lv<31> > i_2_reg_487;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<16> > tmp_15_cast1_fu_292_p3;
    sc_signal< sc_lv<16> > tmp_15_cast1_reg_492;
    sc_signal< sc_lv<1> > tmp_3_fu_277_p2;
    sc_signal< sc_lv<31> > j_2_fu_309_p2;
    sc_signal< sc_lv<31> > j_2_reg_500;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<16> > tmp_10_fu_319_p2;
    sc_signal< sc_lv<16> > tmp_10_reg_505;
    sc_signal< sc_lv<1> > tmp_s_fu_304_p2;
    sc_signal< sc_lv<31> > i_3_fu_337_p2;
    sc_signal< sc_lv<31> > i_3_reg_513;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<16> > tmp_18_cast_fu_347_p3;
    sc_signal< sc_lv<16> > tmp_18_cast_reg_518;
    sc_signal< sc_lv<1> > tmp_5_fu_332_p2;
    sc_signal< sc_lv<31> > j_3_fu_364_p2;
    sc_signal< sc_lv<31> > j_3_reg_526;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<16> > tmp_14_fu_370_p1;
    sc_signal< sc_lv<16> > tmp_14_reg_531;
    sc_signal< sc_lv<1> > tmp_8_fu_359_p2;
    sc_signal< sc_lv<31> > n_1_fu_383_p2;
    sc_signal< sc_lv<31> > n_1_reg_539;
    sc_signal< bool > ap_block_state11_io;
    sc_signal< sc_lv<8> > a_q0;
    sc_signal< sc_lv<8> > a_load_reg_554;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<8> > b_q0;
    sc_signal< sc_lv<8> > b_load_reg_559;
    sc_signal< sc_lv<32> > grp_fu_431_p3;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<14> > a_address0;
    sc_signal< sc_logic > a_ce0;
    sc_signal< sc_logic > a_we0;
    sc_signal< sc_lv<14> > b_address0;
    sc_signal< sc_logic > b_ce0;
    sc_signal< sc_logic > b_we0;
    sc_signal< sc_lv<31> > i_reg_127;
    sc_signal< sc_lv<31> > j_reg_138;
    sc_signal< sc_lv<31> > i1_reg_149;
    sc_signal< sc_lv<31> > j2_reg_160;
    sc_signal< sc_lv<31> > i3_reg_171;
    sc_signal< sc_lv<31> > j4_reg_182;
    sc_signal< sc_lv<32> > sum_reg_193;
    sc_signal< sc_lv<31> > n_reg_207;
    sc_signal< sc_lv<64> > tmp_9_cast_fu_269_p1;
    sc_signal< sc_lv<64> > tmp_16_cast_fu_324_p1;
    sc_signal< sc_lv<64> > tmp_19_cast_fu_398_p1;
    sc_signal< sc_lv<64> > tmp_22_cast_fu_420_p1;
    sc_signal< sc_lv<32> > i_cast_fu_218_p1;
    sc_signal< sc_lv<9> > tmp_1_fu_233_p1;
    sc_signal< sc_lv<32> > j_cast_fu_245_p1;
    sc_signal< sc_lv<16> > tmp_4_fu_260_p1;
    sc_signal< sc_lv<32> > i1_cast_fu_273_p1;
    sc_signal< sc_lv<9> > tmp_6_fu_288_p1;
    sc_signal< sc_lv<32> > j2_cast_fu_300_p1;
    sc_signal< sc_lv<16> > tmp_7_fu_315_p1;
    sc_signal< sc_lv<32> > i3_cast_fu_328_p1;
    sc_signal< sc_lv<9> > tmp_12_fu_343_p1;
    sc_signal< sc_lv<32> > j4_cast_fu_355_p1;
    sc_signal< sc_lv<32> > n_cast_fu_374_p1;
    sc_signal< sc_lv<16> > tmp_15_fu_389_p1;
    sc_signal< sc_lv<16> > tmp_16_fu_393_p2;
    sc_signal< sc_lv<9> > tmp_17_fu_403_p1;
    sc_signal< sc_lv<16> > tmp_21_cast_fu_407_p3;
    sc_signal< sc_lv<16> > tmp_18_fu_415_p2;
    sc_signal< sc_lv<8> > grp_fu_431_p0;
    sc_signal< sc_lv<8> > grp_fu_431_p1;
    sc_signal< sc_lv<14> > ap_NS_fsm;
    sc_signal< sc_lv<16> > grp_fu_431_p00;
    sc_signal< sc_lv<16> > grp_fu_431_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<14> ap_ST_fsm_state1;
    static const sc_lv<14> ap_ST_fsm_state2;
    static const sc_lv<14> ap_ST_fsm_state3;
    static const sc_lv<14> ap_ST_fsm_state4;
    static const sc_lv<14> ap_ST_fsm_state5;
    static const sc_lv<14> ap_ST_fsm_state6;
    static const sc_lv<14> ap_ST_fsm_state7;
    static const sc_lv<14> ap_ST_fsm_state8;
    static const sc_lv<14> ap_ST_fsm_state9;
    static const sc_lv<14> ap_ST_fsm_state10;
    static const sc_lv<14> ap_ST_fsm_state11;
    static const sc_lv<14> ap_ST_fsm_state12;
    static const sc_lv<14> ap_ST_fsm_state13;
    static const sc_lv<14> ap_ST_fsm_state14;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_D;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<31> ap_const_lv31_1;
    static const sc_lv<7> ap_const_lv7_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_a_address0();
    void thread_a_ce0();
    void thread_a_we0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_state11_io();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_b_address0();
    void thread_b_ce0();
    void thread_b_we0();
    void thread_c_1_ack_in();
    void thread_c_1_ack_out();
    void thread_c_1_data_out();
    void thread_c_1_load_A();
    void thread_c_1_load_B();
    void thread_c_1_sel();
    void thread_c_1_state_cmp_full();
    void thread_c_1_vld_in();
    void thread_c_1_vld_out();
    void thread_c_TDATA();
    void thread_c_TDATA_blk_n();
    void thread_c_TVALID();
    void thread_grp_fu_431_p0();
    void thread_grp_fu_431_p00();
    void thread_grp_fu_431_p1();
    void thread_grp_fu_431_p10();
    void thread_i1_cast_fu_273_p1();
    void thread_i3_cast_fu_328_p1();
    void thread_i_1_fu_227_p2();
    void thread_i_2_fu_282_p2();
    void thread_i_3_fu_337_p2();
    void thread_i_cast_fu_218_p1();
    void thread_in_r_0_ack_in();
    void thread_in_r_0_ack_out();
    void thread_in_r_0_data_out();
    void thread_in_r_0_load_A();
    void thread_in_r_0_load_B();
    void thread_in_r_0_sel();
    void thread_in_r_0_state_cmp_full();
    void thread_in_r_0_vld_in();
    void thread_in_r_0_vld_out();
    void thread_in_r_TDATA_blk_n();
    void thread_in_r_TREADY();
    void thread_j2_cast_fu_300_p1();
    void thread_j4_cast_fu_355_p1();
    void thread_j_1_fu_254_p2();
    void thread_j_2_fu_309_p2();
    void thread_j_3_fu_364_p2();
    void thread_j_cast_fu_245_p1();
    void thread_lm_0_ack_out();
    void thread_ln_0_ack_out();
    void thread_lp_0_ack_out();
    void thread_n_1_fu_383_p2();
    void thread_n_cast_fu_374_p1();
    void thread_tmp_10_fu_319_p2();
    void thread_tmp_11_fu_378_p2();
    void thread_tmp_12_fu_343_p1();
    void thread_tmp_14_fu_370_p1();
    void thread_tmp_15_cast1_fu_292_p3();
    void thread_tmp_15_fu_389_p1();
    void thread_tmp_16_cast_fu_324_p1();
    void thread_tmp_16_fu_393_p2();
    void thread_tmp_17_fu_403_p1();
    void thread_tmp_18_cast_fu_347_p3();
    void thread_tmp_18_fu_415_p2();
    void thread_tmp_19_cast_fu_398_p1();
    void thread_tmp_1_fu_233_p1();
    void thread_tmp_21_cast_fu_407_p3();
    void thread_tmp_22_cast_fu_420_p1();
    void thread_tmp_2_fu_249_p2();
    void thread_tmp_3_fu_277_p2();
    void thread_tmp_4_fu_260_p1();
    void thread_tmp_5_fu_332_p2();
    void thread_tmp_6_fu_288_p1();
    void thread_tmp_7_cast_fu_237_p3();
    void thread_tmp_7_fu_315_p1();
    void thread_tmp_8_fu_359_p2();
    void thread_tmp_9_cast_fu_269_p1();
    void thread_tmp_9_fu_264_p2();
    void thread_tmp_fu_222_p2();
    void thread_tmp_s_fu_304_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
