// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "matrixmul_1D_rev2.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic matrixmul_1D_rev2::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic matrixmul_1D_rev2::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<14> matrixmul_1D_rev2::ap_ST_fsm_state1 = "1";
const sc_lv<14> matrixmul_1D_rev2::ap_ST_fsm_state2 = "10";
const sc_lv<14> matrixmul_1D_rev2::ap_ST_fsm_state3 = "100";
const sc_lv<14> matrixmul_1D_rev2::ap_ST_fsm_state4 = "1000";
const sc_lv<14> matrixmul_1D_rev2::ap_ST_fsm_state5 = "10000";
const sc_lv<14> matrixmul_1D_rev2::ap_ST_fsm_state6 = "100000";
const sc_lv<14> matrixmul_1D_rev2::ap_ST_fsm_state7 = "1000000";
const sc_lv<14> matrixmul_1D_rev2::ap_ST_fsm_state8 = "10000000";
const sc_lv<14> matrixmul_1D_rev2::ap_ST_fsm_state9 = "100000000";
const sc_lv<14> matrixmul_1D_rev2::ap_ST_fsm_state10 = "1000000000";
const sc_lv<14> matrixmul_1D_rev2::ap_ST_fsm_state11 = "10000000000";
const sc_lv<14> matrixmul_1D_rev2::ap_ST_fsm_state12 = "100000000000";
const sc_lv<14> matrixmul_1D_rev2::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<14> matrixmul_1D_rev2::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<32> matrixmul_1D_rev2::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> matrixmul_1D_rev2::ap_const_lv32_1 = "1";
const sc_lv<32> matrixmul_1D_rev2::ap_const_lv32_2 = "10";
const sc_lv<32> matrixmul_1D_rev2::ap_const_lv32_3 = "11";
const sc_lv<32> matrixmul_1D_rev2::ap_const_lv32_4 = "100";
const sc_lv<1> matrixmul_1D_rev2::ap_const_lv1_0 = "0";
const sc_lv<32> matrixmul_1D_rev2::ap_const_lv32_6 = "110";
const sc_lv<32> matrixmul_1D_rev2::ap_const_lv32_7 = "111";
const sc_lv<32> matrixmul_1D_rev2::ap_const_lv32_9 = "1001";
const sc_lv<32> matrixmul_1D_rev2::ap_const_lv32_A = "1010";
const sc_lv<32> matrixmul_1D_rev2::ap_const_lv32_B = "1011";
const sc_lv<32> matrixmul_1D_rev2::ap_const_lv32_C = "1100";
const sc_lv<32> matrixmul_1D_rev2::ap_const_lv32_D = "1101";
const sc_lv<10> matrixmul_1D_rev2::ap_const_lv10_0 = "0000000000";
const sc_lv<1> matrixmul_1D_rev2::ap_const_lv1_1 = "1";
const sc_lv<3> matrixmul_1D_rev2::ap_const_lv3_0 = "000";
const sc_lv<32> matrixmul_1D_rev2::ap_const_lv32_5 = "101";
const sc_lv<32> matrixmul_1D_rev2::ap_const_lv32_8 = "1000";
const sc_lv<5> matrixmul_1D_rev2::ap_const_lv5_0 = "00000";
const sc_lv<20> matrixmul_1D_rev2::ap_const_lv20_0 = "00000000000000000000";
const sc_lv<8> matrixmul_1D_rev2::ap_const_lv8_0 = "00000000";
const sc_lv<10> matrixmul_1D_rev2::ap_const_lv10_1 = "1";
const sc_lv<10> matrixmul_1D_rev2::ap_const_lv10_3FF = "1111111111";
const sc_lv<3> matrixmul_1D_rev2::ap_const_lv3_4 = "100";
const sc_lv<3> matrixmul_1D_rev2::ap_const_lv3_1 = "1";
const sc_lv<2> matrixmul_1D_rev2::ap_const_lv2_0 = "00";
const sc_lv<5> matrixmul_1D_rev2::ap_const_lv5_10 = "10000";
const sc_lv<5> matrixmul_1D_rev2::ap_const_lv5_1 = "1";
const bool matrixmul_1D_rev2::ap_const_boolean_1 = true;

matrixmul_1D_rev2::matrixmul_1D_rev2(sc_module_name name) : sc_module(name), mVcdFile(0) {
    A_U = new matrixmul_1D_rev2_A("A_U");
    A_U->clk(ap_clk);
    A_U->reset(ap_rst);
    A_U->address0(A_address0);
    A_U->ce0(A_ce0);
    A_U->we0(A_we0);
    A_U->d0(A_d0);
    A_U->q0(A_q0);
    B_U = new matrixmul_1D_rev2_A("B_U");
    B_U->clk(ap_clk);
    B_U->reset(ap_rst);
    B_U->address0(B_address0);
    B_U->ce0(B_ce0);
    B_U->we0(B_we0);
    B_U->d0(B_d0);
    B_U->q0(B_q0);
    matrixmul_1D_rev2bkb_U1 = new matrixmul_1D_rev2bkb<1,1,8,8,20,20>("matrixmul_1D_rev2bkb_U1");
    matrixmul_1D_rev2bkb_U1->din0(grp_fu_524_p0);
    matrixmul_1D_rev2bkb_U1->din1(grp_fu_524_p1);
    matrixmul_1D_rev2bkb_U1->din2(sum_reg_250);
    matrixmul_1D_rev2bkb_U1->dout(grp_fu_524_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_AB_address0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_14_fu_513_p1 );

    SC_METHOD(thread_AB_ce0);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_AB_d0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( sum_reg_250 );

    SC_METHOD(thread_AB_we0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond7_fu_450_p2 );

    SC_METHOD(thread_A_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_8_reg_564 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_fu_279_p1 );
    sensitive << ( tmp_16_fu_474_p1 );

    SC_METHOD(thread_A_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_A_d0);
    sensitive << ( Input_r_q0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_A_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_B_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_2_fu_296_p1 );
    sensitive << ( tmp_11_fu_421_p1 );
    sensitive << ( tmp_20_fu_491_p1 );

    SC_METHOD(thread_B_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_B_d0);
    sensitive << ( Input_r_q0 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_B_we0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_Input_r_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_8_fu_345_p1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_s_fu_407_p1 );

    SC_METHOD(thread_Input_r_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( exitcond_fu_426_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( exitcond_fu_426_p2 );

    SC_METHOD(thread_exitcond3_fu_378_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( j2_reg_214 );

    SC_METHOD(thread_exitcond4_fu_350_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( i1_reg_203 );

    SC_METHOD(thread_exitcond5_fu_319_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( j_reg_192 );

    SC_METHOD(thread_exitcond6_fu_307_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_reg_180 );

    SC_METHOD(thread_exitcond7_fu_450_p2);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( k_reg_262 );

    SC_METHOD(thread_exitcond9_fu_438_p2);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( j7_reg_238 );

    SC_METHOD(thread_exitcond_fu_426_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( i6_reg_226 );

    SC_METHOD(thread_grp_fu_524_p0);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( grp_fu_524_p00 );

    SC_METHOD(thread_grp_fu_524_p00);
    sensitive << ( A_load_reg_639 );

    SC_METHOD(thread_grp_fu_524_p1);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( grp_fu_524_p10 );

    SC_METHOD(thread_grp_fu_524_p10);
    sensitive << ( B_load_reg_644 );

    SC_METHOD(thread_i_1_fu_313_p2);
    sensitive << ( i_reg_180 );

    SC_METHOD(thread_i_2_fu_356_p2);
    sensitive << ( i1_reg_203 );

    SC_METHOD(thread_i_3_fu_432_p2);
    sensitive << ( i6_reg_226 );

    SC_METHOD(thread_indvarinc1_fu_290_p2);
    sensitive << ( invdar1_reg_169 );

    SC_METHOD(thread_indvarinc_fu_273_p2);
    sensitive << ( invdar_reg_158 );

    SC_METHOD(thread_j_1_fu_325_p2);
    sensitive << ( j_reg_192 );

    SC_METHOD(thread_j_2_fu_384_p2);
    sensitive << ( j2_reg_214 );

    SC_METHOD(thread_j_3_fu_444_p2);
    sensitive << ( j7_reg_238 );

    SC_METHOD(thread_k_1_fu_456_p2);
    sensitive << ( k_reg_262 );

    SC_METHOD(thread_tmp1_cast_fu_398_p1);
    sensitive << ( tmp5_fu_390_p3 );

    SC_METHOD(thread_tmp5_fu_390_p3);
    sensitive << ( j2_reg_214 );

    SC_METHOD(thread_tmp_10_fu_412_p4);
    sensitive << ( tmp_4_reg_582 );
    sensitive << ( j2_reg_214 );

    SC_METHOD(thread_tmp_11_fu_421_p1);
    sensitive << ( tmp_10_fu_412_p4 );

    SC_METHOD(thread_tmp_12_fu_501_p1);
    sensitive << ( i6_reg_226 );

    SC_METHOD(thread_tmp_13_fu_505_p3);
    sensitive << ( j7_reg_238 );
    sensitive << ( tmp_12_fu_501_p1 );

    SC_METHOD(thread_tmp_14_fu_513_p1);
    sensitive << ( tmp_13_fu_505_p3 );

    SC_METHOD(thread_tmp_15_fu_466_p3);
    sensitive << ( k_reg_262 );
    sensitive << ( tmp_17_fu_462_p1 );

    SC_METHOD(thread_tmp_16_fu_474_p1);
    sensitive << ( tmp_15_fu_466_p3 );

    SC_METHOD(thread_tmp_17_fu_462_p1);
    sensitive << ( i6_reg_226 );

    SC_METHOD(thread_tmp_18_fu_479_p1);
    sensitive << ( k_reg_262 );

    SC_METHOD(thread_tmp_19_fu_483_p3);
    sensitive << ( j7_reg_238 );
    sensitive << ( tmp_18_fu_479_p1 );

    SC_METHOD(thread_tmp_1_fu_284_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( invdar_reg_158 );

    SC_METHOD(thread_tmp_20_fu_491_p1);
    sensitive << ( tmp_19_fu_483_p3 );

    SC_METHOD(thread_tmp_2_fu_296_p1);
    sensitive << ( invdar1_reg_169 );

    SC_METHOD(thread_tmp_3_fu_301_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( invdar1_reg_169 );

    SC_METHOD(thread_tmp_4_fu_362_p1);
    sensitive << ( i1_reg_203 );

    SC_METHOD(thread_tmp_5_cast_fu_374_p1);
    sensitive << ( tmp_5_fu_366_p3 );

    SC_METHOD(thread_tmp_5_fu_366_p3);
    sensitive << ( tmp_4_fu_362_p1 );

    SC_METHOD(thread_tmp_6_fu_331_p1);
    sensitive << ( i_reg_180 );

    SC_METHOD(thread_tmp_7_fu_335_p4);
    sensitive << ( j_reg_192 );
    sensitive << ( tmp_6_fu_331_p1 );

    SC_METHOD(thread_tmp_8_fu_345_p1);
    sensitive << ( tmp_7_fu_335_p4 );

    SC_METHOD(thread_tmp_9_fu_402_p2);
    sensitive << ( tmp_5_cast_reg_587 );
    sensitive << ( tmp1_cast_fu_398_p1 );

    SC_METHOD(thread_tmp_fu_279_p1);
    sensitive << ( invdar_reg_158 );

    SC_METHOD(thread_tmp_s_fu_407_p1);
    sensitive << ( tmp_9_fu_402_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond5_fu_319_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond4_fu_350_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( exitcond3_fu_378_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond7_fu_450_p2 );
    sensitive << ( tmp_1_fu_284_p2 );
    sensitive << ( tmp_3_fu_301_p2 );
    sensitive << ( exitcond6_fu_307_p2 );
    sensitive << ( exitcond9_fu_438_p2 );
    sensitive << ( exitcond_fu_426_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "matrixmul_1D_rev2_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, Input_r_address0, "(port)Input_r_address0");
    sc_trace(mVcdFile, Input_r_ce0, "(port)Input_r_ce0");
    sc_trace(mVcdFile, Input_r_q0, "(port)Input_r_q0");
    sc_trace(mVcdFile, AB_address0, "(port)AB_address0");
    sc_trace(mVcdFile, AB_ce0, "(port)AB_ce0");
    sc_trace(mVcdFile, AB_we0, "(port)AB_we0");
    sc_trace(mVcdFile, AB_d0, "(port)AB_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, indvarinc_fu_273_p2, "indvarinc_fu_273_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, indvarinc1_fu_290_p2, "indvarinc1_fu_290_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, i_1_fu_313_p2, "i_1_fu_313_p2");
    sc_trace(mVcdFile, i_1_reg_551, "i_1_reg_551");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, j_1_fu_325_p2, "j_1_fu_325_p2");
    sc_trace(mVcdFile, j_1_reg_559, "j_1_reg_559");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_8_fu_345_p1, "tmp_8_fu_345_p1");
    sc_trace(mVcdFile, tmp_8_reg_564, "tmp_8_reg_564");
    sc_trace(mVcdFile, exitcond5_fu_319_p2, "exitcond5_fu_319_p2");
    sc_trace(mVcdFile, i_2_fu_356_p2, "i_2_fu_356_p2");
    sc_trace(mVcdFile, i_2_reg_577, "i_2_reg_577");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, tmp_4_fu_362_p1, "tmp_4_fu_362_p1");
    sc_trace(mVcdFile, tmp_4_reg_582, "tmp_4_reg_582");
    sc_trace(mVcdFile, exitcond4_fu_350_p2, "exitcond4_fu_350_p2");
    sc_trace(mVcdFile, tmp_5_cast_fu_374_p1, "tmp_5_cast_fu_374_p1");
    sc_trace(mVcdFile, tmp_5_cast_reg_587, "tmp_5_cast_reg_587");
    sc_trace(mVcdFile, j_2_fu_384_p2, "j_2_fu_384_p2");
    sc_trace(mVcdFile, j_2_reg_595, "j_2_reg_595");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, exitcond3_fu_378_p2, "exitcond3_fu_378_p2");
    sc_trace(mVcdFile, i_3_fu_432_p2, "i_3_fu_432_p2");
    sc_trace(mVcdFile, i_3_reg_608, "i_3_reg_608");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, j_3_fu_444_p2, "j_3_fu_444_p2");
    sc_trace(mVcdFile, j_3_reg_616, "j_3_reg_616");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, k_1_fu_456_p2, "k_1_fu_456_p2");
    sc_trace(mVcdFile, k_1_reg_624, "k_1_reg_624");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, exitcond7_fu_450_p2, "exitcond7_fu_450_p2");
    sc_trace(mVcdFile, A_q0, "A_q0");
    sc_trace(mVcdFile, A_load_reg_639, "A_load_reg_639");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, B_q0, "B_q0");
    sc_trace(mVcdFile, B_load_reg_644, "B_load_reg_644");
    sc_trace(mVcdFile, grp_fu_524_p3, "grp_fu_524_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, A_address0, "A_address0");
    sc_trace(mVcdFile, A_ce0, "A_ce0");
    sc_trace(mVcdFile, A_we0, "A_we0");
    sc_trace(mVcdFile, A_d0, "A_d0");
    sc_trace(mVcdFile, B_address0, "B_address0");
    sc_trace(mVcdFile, B_ce0, "B_ce0");
    sc_trace(mVcdFile, B_we0, "B_we0");
    sc_trace(mVcdFile, B_d0, "B_d0");
    sc_trace(mVcdFile, invdar_reg_158, "invdar_reg_158");
    sc_trace(mVcdFile, tmp_1_fu_284_p2, "tmp_1_fu_284_p2");
    sc_trace(mVcdFile, invdar1_reg_169, "invdar1_reg_169");
    sc_trace(mVcdFile, tmp_3_fu_301_p2, "tmp_3_fu_301_p2");
    sc_trace(mVcdFile, i_reg_180, "i_reg_180");
    sc_trace(mVcdFile, j_reg_192, "j_reg_192");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, exitcond6_fu_307_p2, "exitcond6_fu_307_p2");
    sc_trace(mVcdFile, i1_reg_203, "i1_reg_203");
    sc_trace(mVcdFile, j2_reg_214, "j2_reg_214");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, i6_reg_226, "i6_reg_226");
    sc_trace(mVcdFile, exitcond9_fu_438_p2, "exitcond9_fu_438_p2");
    sc_trace(mVcdFile, j7_reg_238, "j7_reg_238");
    sc_trace(mVcdFile, exitcond_fu_426_p2, "exitcond_fu_426_p2");
    sc_trace(mVcdFile, sum_reg_250, "sum_reg_250");
    sc_trace(mVcdFile, k_reg_262, "k_reg_262");
    sc_trace(mVcdFile, tmp_fu_279_p1, "tmp_fu_279_p1");
    sc_trace(mVcdFile, tmp_2_fu_296_p1, "tmp_2_fu_296_p1");
    sc_trace(mVcdFile, tmp_s_fu_407_p1, "tmp_s_fu_407_p1");
    sc_trace(mVcdFile, tmp_11_fu_421_p1, "tmp_11_fu_421_p1");
    sc_trace(mVcdFile, tmp_16_fu_474_p1, "tmp_16_fu_474_p1");
    sc_trace(mVcdFile, tmp_20_fu_491_p1, "tmp_20_fu_491_p1");
    sc_trace(mVcdFile, tmp_14_fu_513_p1, "tmp_14_fu_513_p1");
    sc_trace(mVcdFile, tmp_6_fu_331_p1, "tmp_6_fu_331_p1");
    sc_trace(mVcdFile, tmp_7_fu_335_p4, "tmp_7_fu_335_p4");
    sc_trace(mVcdFile, tmp_5_fu_366_p3, "tmp_5_fu_366_p3");
    sc_trace(mVcdFile, tmp5_fu_390_p3, "tmp5_fu_390_p3");
    sc_trace(mVcdFile, tmp1_cast_fu_398_p1, "tmp1_cast_fu_398_p1");
    sc_trace(mVcdFile, tmp_9_fu_402_p2, "tmp_9_fu_402_p2");
    sc_trace(mVcdFile, tmp_10_fu_412_p4, "tmp_10_fu_412_p4");
    sc_trace(mVcdFile, tmp_17_fu_462_p1, "tmp_17_fu_462_p1");
    sc_trace(mVcdFile, tmp_15_fu_466_p3, "tmp_15_fu_466_p3");
    sc_trace(mVcdFile, tmp_18_fu_479_p1, "tmp_18_fu_479_p1");
    sc_trace(mVcdFile, tmp_19_fu_483_p3, "tmp_19_fu_483_p3");
    sc_trace(mVcdFile, tmp_12_fu_501_p1, "tmp_12_fu_501_p1");
    sc_trace(mVcdFile, tmp_13_fu_505_p3, "tmp_13_fu_505_p3");
    sc_trace(mVcdFile, grp_fu_524_p0, "grp_fu_524_p0");
    sc_trace(mVcdFile, grp_fu_524_p1, "grp_fu_524_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, grp_fu_524_p00, "grp_fu_524_p00");
    sc_trace(mVcdFile, grp_fu_524_p10, "grp_fu_524_p10");
#endif

    }
    mHdltvinHandle.open("matrixmul_1D_rev2.hdltvin.dat");
    mHdltvoutHandle.open("matrixmul_1D_rev2.hdltvout.dat");
}

matrixmul_1D_rev2::~matrixmul_1D_rev2() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete A_U;
    delete B_U;
    delete matrixmul_1D_rev2bkb_U1;
}

void matrixmul_1D_rev2::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(exitcond6_fu_307_p2.read(), ap_const_lv1_1))) {
        i1_reg_203 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(exitcond3_fu_378_p2.read(), ap_const_lv1_1))) {
        i1_reg_203 = i_2_reg_577.read();
    }
    if ((esl_seteq<1,1,1>(exitcond4_fu_350_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        i6_reg_226 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                esl_seteq<1,1,1>(exitcond9_fu_438_p2.read(), ap_const_lv1_1))) {
        i6_reg_226 = i_3_reg_608.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_3_fu_301_p2.read(), ap_const_lv1_1))) {
        i_reg_180 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(exitcond5_fu_319_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        i_reg_180 = i_1_reg_551.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_1_fu_284_p2.read(), ap_const_lv1_1))) {
        invdar1_reg_169 = ap_const_lv10_0;
    } else if ((esl_seteq<1,1,1>(tmp_3_fu_301_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        invdar1_reg_169 = indvarinc1_fu_290_p2.read();
    }
    if ((esl_seteq<1,1,1>(tmp_1_fu_284_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        invdar_reg_158 = indvarinc_fu_273_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        invdar_reg_158 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(exitcond4_fu_350_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        j2_reg_214 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        j2_reg_214 = j_2_reg_595.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_fu_426_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        j7_reg_238 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                esl_seteq<1,1,1>(exitcond7_fu_450_p2.read(), ap_const_lv1_1))) {
        j7_reg_238 = j_3_reg_616.read();
    }
    if ((esl_seteq<1,1,1>(exitcond6_fu_307_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        j_reg_192 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        j_reg_192 = j_1_reg_559.read();
    }
    if ((esl_seteq<1,1,1>(exitcond9_fu_438_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        k_reg_262 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        k_reg_262 = k_1_reg_624.read();
    }
    if ((esl_seteq<1,1,1>(exitcond9_fu_438_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        sum_reg_250 = ap_const_lv20_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        sum_reg_250 = grp_fu_524_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        A_load_reg_639 = A_q0.read();
        B_load_reg_644 = B_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_1_reg_551 = i_1_fu_313_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        i_2_reg_577 = i_2_fu_356_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        i_3_reg_608 = i_3_fu_432_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        j_1_reg_559 = j_1_fu_325_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        j_2_reg_595 = j_2_fu_384_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        j_3_reg_616 = j_3_fu_444_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        k_1_reg_624 = k_1_fu_456_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond4_fu_350_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        tmp_4_reg_582 = tmp_4_fu_362_p1.read();
        tmp_5_cast_reg_587 = tmp_5_cast_fu_374_p1.read();
    }
    if ((esl_seteq<1,1,1>(exitcond5_fu_319_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        tmp_8_reg_564 = tmp_8_fu_345_p1.read();
    }
}

void matrixmul_1D_rev2::thread_AB_address0() {
    AB_address0 =  (sc_lv<10>) (tmp_14_fu_513_p1.read());
}

void matrixmul_1D_rev2::thread_AB_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        AB_ce0 = ap_const_logic_1;
    } else {
        AB_ce0 = ap_const_logic_0;
    }
}

void matrixmul_1D_rev2::thread_AB_d0() {
    AB_d0 = esl_zext<32,20>(sum_reg_250.read());
}

void matrixmul_1D_rev2::thread_AB_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
         esl_seteq<1,1,1>(exitcond7_fu_450_p2.read(), ap_const_lv1_1))) {
        AB_we0 = ap_const_logic_1;
    } else {
        AB_we0 = ap_const_logic_0;
    }
}

void matrixmul_1D_rev2::thread_A_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        A_address0 =  (sc_lv<10>) (tmp_16_fu_474_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        A_address0 =  (sc_lv<10>) (tmp_8_reg_564.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        A_address0 =  (sc_lv<10>) (tmp_fu_279_p1.read());
    } else {
        A_address0 = "XXXXXXXXXX";
    }
}

void matrixmul_1D_rev2::thread_A_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        A_ce0 = ap_const_logic_1;
    } else {
        A_ce0 = ap_const_logic_0;
    }
}

void matrixmul_1D_rev2::thread_A_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        A_d0 = Input_r_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        A_d0 = ap_const_lv8_0;
    } else {
        A_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void matrixmul_1D_rev2::thread_A_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        A_we0 = ap_const_logic_1;
    } else {
        A_we0 = ap_const_logic_0;
    }
}

void matrixmul_1D_rev2::thread_B_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        B_address0 =  (sc_lv<10>) (tmp_20_fu_491_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        B_address0 =  (sc_lv<10>) (tmp_11_fu_421_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        B_address0 =  (sc_lv<10>) (tmp_2_fu_296_p1.read());
    } else {
        B_address0 = "XXXXXXXXXX";
    }
}

void matrixmul_1D_rev2::thread_B_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        B_ce0 = ap_const_logic_1;
    } else {
        B_ce0 = ap_const_logic_0;
    }
}

void matrixmul_1D_rev2::thread_B_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        B_d0 = Input_r_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        B_d0 = ap_const_lv8_0;
    } else {
        B_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void matrixmul_1D_rev2::thread_B_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        B_we0 = ap_const_logic_1;
    } else {
        B_we0 = ap_const_logic_0;
    }
}

void matrixmul_1D_rev2::thread_Input_r_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        Input_r_address0 =  (sc_lv<11>) (tmp_s_fu_407_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        Input_r_address0 =  (sc_lv<11>) (tmp_8_fu_345_p1.read());
    } else {
        Input_r_address0 =  (sc_lv<11>) ("XXXXXXXXXXX");
    }
}

void matrixmul_1D_rev2::thread_Input_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        Input_r_ce0 = ap_const_logic_1;
    } else {
        Input_r_ce0 = ap_const_logic_0;
    }
}

void matrixmul_1D_rev2::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void matrixmul_1D_rev2::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void matrixmul_1D_rev2::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void matrixmul_1D_rev2::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void matrixmul_1D_rev2::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void matrixmul_1D_rev2::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void matrixmul_1D_rev2::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void matrixmul_1D_rev2::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void matrixmul_1D_rev2::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void matrixmul_1D_rev2::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void matrixmul_1D_rev2::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void matrixmul_1D_rev2::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void matrixmul_1D_rev2::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void matrixmul_1D_rev2::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void matrixmul_1D_rev2::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_426_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void matrixmul_1D_rev2::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void matrixmul_1D_rev2::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_426_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void matrixmul_1D_rev2::thread_exitcond3_fu_378_p2() {
    exitcond3_fu_378_p2 = (!j2_reg_214.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(j2_reg_214.read() == ap_const_lv3_4);
}

void matrixmul_1D_rev2::thread_exitcond4_fu_350_p2() {
    exitcond4_fu_350_p2 = (!i1_reg_203.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i1_reg_203.read() == ap_const_lv3_4);
}

void matrixmul_1D_rev2::thread_exitcond5_fu_319_p2() {
    exitcond5_fu_319_p2 = (!j_reg_192.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_192.read() == ap_const_lv3_4);
}

void matrixmul_1D_rev2::thread_exitcond6_fu_307_p2() {
    exitcond6_fu_307_p2 = (!i_reg_180.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_180.read() == ap_const_lv3_4);
}

void matrixmul_1D_rev2::thread_exitcond7_fu_450_p2() {
    exitcond7_fu_450_p2 = (!k_reg_262.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(k_reg_262.read() == ap_const_lv5_10);
}

void matrixmul_1D_rev2::thread_exitcond9_fu_438_p2() {
    exitcond9_fu_438_p2 = (!j7_reg_238.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(j7_reg_238.read() == ap_const_lv5_10);
}

void matrixmul_1D_rev2::thread_exitcond_fu_426_p2() {
    exitcond_fu_426_p2 = (!i6_reg_226.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i6_reg_226.read() == ap_const_lv5_10);
}

void matrixmul_1D_rev2::thread_grp_fu_524_p0() {
    grp_fu_524_p0 =  (sc_lv<8>) (grp_fu_524_p00.read());
}

void matrixmul_1D_rev2::thread_grp_fu_524_p00() {
    grp_fu_524_p00 = esl_zext<16,8>(A_load_reg_639.read());
}

void matrixmul_1D_rev2::thread_grp_fu_524_p1() {
    grp_fu_524_p1 =  (sc_lv<8>) (grp_fu_524_p10.read());
}

void matrixmul_1D_rev2::thread_grp_fu_524_p10() {
    grp_fu_524_p10 = esl_zext<16,8>(B_load_reg_644.read());
}

void matrixmul_1D_rev2::thread_i_1_fu_313_p2() {
    i_1_fu_313_p2 = (!i_reg_180.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_reg_180.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void matrixmul_1D_rev2::thread_i_2_fu_356_p2() {
    i_2_fu_356_p2 = (!i1_reg_203.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i1_reg_203.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void matrixmul_1D_rev2::thread_i_3_fu_432_p2() {
    i_3_fu_432_p2 = (!i6_reg_226.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i6_reg_226.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void matrixmul_1D_rev2::thread_indvarinc1_fu_290_p2() {
    indvarinc1_fu_290_p2 = (!invdar1_reg_169.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(invdar1_reg_169.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void matrixmul_1D_rev2::thread_indvarinc_fu_273_p2() {
    indvarinc_fu_273_p2 = (!invdar_reg_158.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(invdar_reg_158.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void matrixmul_1D_rev2::thread_j_1_fu_325_p2() {
    j_1_fu_325_p2 = (!j_reg_192.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(j_reg_192.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void matrixmul_1D_rev2::thread_j_2_fu_384_p2() {
    j_2_fu_384_p2 = (!j2_reg_214.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(j2_reg_214.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void matrixmul_1D_rev2::thread_j_3_fu_444_p2() {
    j_3_fu_444_p2 = (!j7_reg_238.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(j7_reg_238.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void matrixmul_1D_rev2::thread_k_1_fu_456_p2() {
    k_1_fu_456_p2 = (!k_reg_262.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(k_reg_262.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void matrixmul_1D_rev2::thread_tmp1_cast_fu_398_p1() {
    tmp1_cast_fu_398_p1 = esl_zext<8,6>(tmp5_fu_390_p3.read());
}

void matrixmul_1D_rev2::thread_tmp5_fu_390_p3() {
    tmp5_fu_390_p3 = esl_concat<3,3>(ap_const_lv3_4, j2_reg_214.read());
}

void matrixmul_1D_rev2::thread_tmp_10_fu_412_p4() {
    tmp_10_fu_412_p4 = esl_concat<4,3>(esl_concat<2,2>(tmp_4_reg_582.read(), ap_const_lv2_0), j2_reg_214.read());
}

void matrixmul_1D_rev2::thread_tmp_11_fu_421_p1() {
    tmp_11_fu_421_p1 = esl_zext<64,7>(tmp_10_fu_412_p4.read());
}

void matrixmul_1D_rev2::thread_tmp_12_fu_501_p1() {
    tmp_12_fu_501_p1 = i6_reg_226.read().range(4-1, 0);
}

void matrixmul_1D_rev2::thread_tmp_13_fu_505_p3() {
    tmp_13_fu_505_p3 = esl_concat<4,5>(tmp_12_fu_501_p1.read(), j7_reg_238.read());
}

void matrixmul_1D_rev2::thread_tmp_14_fu_513_p1() {
    tmp_14_fu_513_p1 = esl_zext<64,9>(tmp_13_fu_505_p3.read());
}

void matrixmul_1D_rev2::thread_tmp_15_fu_466_p3() {
    tmp_15_fu_466_p3 = esl_concat<4,5>(tmp_17_fu_462_p1.read(), k_reg_262.read());
}

void matrixmul_1D_rev2::thread_tmp_16_fu_474_p1() {
    tmp_16_fu_474_p1 = esl_zext<64,9>(tmp_15_fu_466_p3.read());
}

void matrixmul_1D_rev2::thread_tmp_17_fu_462_p1() {
    tmp_17_fu_462_p1 = i6_reg_226.read().range(4-1, 0);
}

void matrixmul_1D_rev2::thread_tmp_18_fu_479_p1() {
    tmp_18_fu_479_p1 = k_reg_262.read().range(4-1, 0);
}

void matrixmul_1D_rev2::thread_tmp_19_fu_483_p3() {
    tmp_19_fu_483_p3 = esl_concat<4,5>(tmp_18_fu_479_p1.read(), j7_reg_238.read());
}

void matrixmul_1D_rev2::thread_tmp_1_fu_284_p2() {
    tmp_1_fu_284_p2 = (!invdar_reg_158.read().is_01() || !ap_const_lv10_3FF.is_01())? sc_lv<1>(): sc_lv<1>(invdar_reg_158.read() == ap_const_lv10_3FF);
}

void matrixmul_1D_rev2::thread_tmp_20_fu_491_p1() {
    tmp_20_fu_491_p1 = esl_zext<64,9>(tmp_19_fu_483_p3.read());
}

void matrixmul_1D_rev2::thread_tmp_2_fu_296_p1() {
    tmp_2_fu_296_p1 = esl_zext<64,10>(invdar1_reg_169.read());
}

void matrixmul_1D_rev2::thread_tmp_3_fu_301_p2() {
    tmp_3_fu_301_p2 = (!invdar1_reg_169.read().is_01() || !ap_const_lv10_3FF.is_01())? sc_lv<1>(): sc_lv<1>(invdar1_reg_169.read() == ap_const_lv10_3FF);
}

void matrixmul_1D_rev2::thread_tmp_4_fu_362_p1() {
    tmp_4_fu_362_p1 = i1_reg_203.read().range(2-1, 0);
}

void matrixmul_1D_rev2::thread_tmp_5_cast_fu_374_p1() {
    tmp_5_cast_fu_374_p1 = esl_zext<8,7>(tmp_5_fu_366_p3.read());
}

void matrixmul_1D_rev2::thread_tmp_5_fu_366_p3() {
    tmp_5_fu_366_p3 = esl_concat<2,5>(tmp_4_fu_362_p1.read(), ap_const_lv5_0);
}

void matrixmul_1D_rev2::thread_tmp_6_fu_331_p1() {
    tmp_6_fu_331_p1 = i_reg_180.read().range(2-1, 0);
}

void matrixmul_1D_rev2::thread_tmp_7_fu_335_p4() {
    tmp_7_fu_335_p4 = esl_concat<4,3>(esl_concat<2,2>(tmp_6_fu_331_p1.read(), ap_const_lv2_0), j_reg_192.read());
}

void matrixmul_1D_rev2::thread_tmp_8_fu_345_p1() {
    tmp_8_fu_345_p1 = esl_zext<64,7>(tmp_7_fu_335_p4.read());
}

void matrixmul_1D_rev2::thread_tmp_9_fu_402_p2() {
    tmp_9_fu_402_p2 = (!tmp_5_cast_reg_587.read().is_01() || !tmp1_cast_fu_398_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_5_cast_reg_587.read()) + sc_biguint<8>(tmp1_cast_fu_398_p1.read()));
}

void matrixmul_1D_rev2::thread_tmp_fu_279_p1() {
    tmp_fu_279_p1 = esl_zext<64,10>(invdar_reg_158.read());
}

void matrixmul_1D_rev2::thread_tmp_s_fu_407_p1() {
    tmp_s_fu_407_p1 = esl_zext<64,8>(tmp_9_fu_402_p2.read());
}

void matrixmul_1D_rev2::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(tmp_1_fu_284_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(tmp_3_fu_301_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond6_fu_307_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(exitcond5_fu_319_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(exitcond4_fu_350_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(exitcond3_fu_378_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(exitcond_fu_426_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(exitcond9_fu_438_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(exitcond7_fu_450_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<14>) ("XXXXXXXXXXXXXX");
            break;
    }
}

void matrixmul_1D_rev2::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Input_r_address0\" :  \"" << Input_r_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Input_r_ce0\" :  \"" << Input_r_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Input_r_q0\" :  \"" << Input_r_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"AB_address0\" :  \"" << AB_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"AB_ce0\" :  \"" << AB_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"AB_we0\" :  \"" << AB_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"AB_d0\" :  \"" << AB_d0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

