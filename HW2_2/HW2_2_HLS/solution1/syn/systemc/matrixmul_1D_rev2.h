// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _matrixmul_1D_rev2_HH_
#define _matrixmul_1D_rev2_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "matrixmul_1D_rev2bkb.h"
#include "matrixmul_1D_rev2_A.h"

namespace ap_rtl {

struct matrixmul_1D_rev2 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<11> > Input_r_address0;
    sc_out< sc_logic > Input_r_ce0;
    sc_in< sc_lv<8> > Input_r_q0;
    sc_out< sc_lv<10> > AB_address0;
    sc_out< sc_logic > AB_ce0;
    sc_out< sc_logic > AB_we0;
    sc_out< sc_lv<32> > AB_d0;


    // Module declarations
    matrixmul_1D_rev2(sc_module_name name);
    SC_HAS_PROCESS(matrixmul_1D_rev2);

    ~matrixmul_1D_rev2();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    matrixmul_1D_rev2_A* A_U;
    matrixmul_1D_rev2_A* B_U;
    matrixmul_1D_rev2bkb<1,1,8,8,20,20>* matrixmul_1D_rev2bkb_U1;
    sc_signal< sc_lv<14> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<10> > indvarinc_fu_273_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<10> > indvarinc1_fu_290_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<3> > i_1_fu_313_p2;
    sc_signal< sc_lv<3> > i_1_reg_551;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<3> > j_1_fu_325_p2;
    sc_signal< sc_lv<3> > j_1_reg_559;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<64> > tmp_8_fu_345_p1;
    sc_signal< sc_lv<64> > tmp_8_reg_564;
    sc_signal< sc_lv<1> > exitcond5_fu_319_p2;
    sc_signal< sc_lv<3> > i_2_fu_356_p2;
    sc_signal< sc_lv<3> > i_2_reg_577;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<2> > tmp_4_fu_362_p1;
    sc_signal< sc_lv<2> > tmp_4_reg_582;
    sc_signal< sc_lv<1> > exitcond4_fu_350_p2;
    sc_signal< sc_lv<8> > tmp_5_cast_fu_374_p1;
    sc_signal< sc_lv<8> > tmp_5_cast_reg_587;
    sc_signal< sc_lv<3> > j_2_fu_384_p2;
    sc_signal< sc_lv<3> > j_2_reg_595;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<1> > exitcond3_fu_378_p2;
    sc_signal< sc_lv<5> > i_3_fu_432_p2;
    sc_signal< sc_lv<5> > i_3_reg_608;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<5> > j_3_fu_444_p2;
    sc_signal< sc_lv<5> > j_3_reg_616;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<5> > k_1_fu_456_p2;
    sc_signal< sc_lv<5> > k_1_reg_624;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<1> > exitcond7_fu_450_p2;
    sc_signal< sc_lv<8> > A_q0;
    sc_signal< sc_lv<8> > A_load_reg_639;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<8> > B_q0;
    sc_signal< sc_lv<8> > B_load_reg_644;
    sc_signal< sc_lv<20> > grp_fu_524_p3;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<10> > A_address0;
    sc_signal< sc_logic > A_ce0;
    sc_signal< sc_logic > A_we0;
    sc_signal< sc_lv<8> > A_d0;
    sc_signal< sc_lv<10> > B_address0;
    sc_signal< sc_logic > B_ce0;
    sc_signal< sc_logic > B_we0;
    sc_signal< sc_lv<8> > B_d0;
    sc_signal< sc_lv<10> > invdar_reg_158;
    sc_signal< sc_lv<1> > tmp_1_fu_284_p2;
    sc_signal< sc_lv<10> > invdar1_reg_169;
    sc_signal< sc_lv<1> > tmp_3_fu_301_p2;
    sc_signal< sc_lv<3> > i_reg_180;
    sc_signal< sc_lv<3> > j_reg_192;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > exitcond6_fu_307_p2;
    sc_signal< sc_lv<3> > i1_reg_203;
    sc_signal< sc_lv<3> > j2_reg_214;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<5> > i6_reg_226;
    sc_signal< sc_lv<1> > exitcond9_fu_438_p2;
    sc_signal< sc_lv<5> > j7_reg_238;
    sc_signal< sc_lv<1> > exitcond_fu_426_p2;
    sc_signal< sc_lv<20> > sum_reg_250;
    sc_signal< sc_lv<5> > k_reg_262;
    sc_signal< sc_lv<64> > tmp_fu_279_p1;
    sc_signal< sc_lv<64> > tmp_2_fu_296_p1;
    sc_signal< sc_lv<64> > tmp_s_fu_407_p1;
    sc_signal< sc_lv<64> > tmp_11_fu_421_p1;
    sc_signal< sc_lv<64> > tmp_16_fu_474_p1;
    sc_signal< sc_lv<64> > tmp_20_fu_491_p1;
    sc_signal< sc_lv<64> > tmp_14_fu_513_p1;
    sc_signal< sc_lv<2> > tmp_6_fu_331_p1;
    sc_signal< sc_lv<7> > tmp_7_fu_335_p4;
    sc_signal< sc_lv<7> > tmp_5_fu_366_p3;
    sc_signal< sc_lv<6> > tmp5_fu_390_p3;
    sc_signal< sc_lv<8> > tmp1_cast_fu_398_p1;
    sc_signal< sc_lv<8> > tmp_9_fu_402_p2;
    sc_signal< sc_lv<7> > tmp_10_fu_412_p4;
    sc_signal< sc_lv<4> > tmp_17_fu_462_p1;
    sc_signal< sc_lv<9> > tmp_15_fu_466_p3;
    sc_signal< sc_lv<4> > tmp_18_fu_479_p1;
    sc_signal< sc_lv<9> > tmp_19_fu_483_p3;
    sc_signal< sc_lv<4> > tmp_12_fu_501_p1;
    sc_signal< sc_lv<9> > tmp_13_fu_505_p3;
    sc_signal< sc_lv<8> > grp_fu_524_p0;
    sc_signal< sc_lv<8> > grp_fu_524_p1;
    sc_signal< sc_lv<14> > ap_NS_fsm;
    sc_signal< sc_lv<16> > grp_fu_524_p00;
    sc_signal< sc_lv<16> > grp_fu_524_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<14> ap_ST_fsm_state1;
    static const sc_lv<14> ap_ST_fsm_state2;
    static const sc_lv<14> ap_ST_fsm_state3;
    static const sc_lv<14> ap_ST_fsm_state4;
    static const sc_lv<14> ap_ST_fsm_state5;
    static const sc_lv<14> ap_ST_fsm_state6;
    static const sc_lv<14> ap_ST_fsm_state7;
    static const sc_lv<14> ap_ST_fsm_state8;
    static const sc_lv<14> ap_ST_fsm_state9;
    static const sc_lv<14> ap_ST_fsm_state10;
    static const sc_lv<14> ap_ST_fsm_state11;
    static const sc_lv<14> ap_ST_fsm_state12;
    static const sc_lv<14> ap_ST_fsm_state13;
    static const sc_lv<14> ap_ST_fsm_state14;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<20> ap_const_lv20_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<10> ap_const_lv10_3FF;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_AB_address0();
    void thread_AB_ce0();
    void thread_AB_d0();
    void thread_AB_we0();
    void thread_A_address0();
    void thread_A_ce0();
    void thread_A_d0();
    void thread_A_we0();
    void thread_B_address0();
    void thread_B_ce0();
    void thread_B_d0();
    void thread_B_we0();
    void thread_Input_r_address0();
    void thread_Input_r_ce0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exitcond3_fu_378_p2();
    void thread_exitcond4_fu_350_p2();
    void thread_exitcond5_fu_319_p2();
    void thread_exitcond6_fu_307_p2();
    void thread_exitcond7_fu_450_p2();
    void thread_exitcond9_fu_438_p2();
    void thread_exitcond_fu_426_p2();
    void thread_grp_fu_524_p0();
    void thread_grp_fu_524_p00();
    void thread_grp_fu_524_p1();
    void thread_grp_fu_524_p10();
    void thread_i_1_fu_313_p2();
    void thread_i_2_fu_356_p2();
    void thread_i_3_fu_432_p2();
    void thread_indvarinc1_fu_290_p2();
    void thread_indvarinc_fu_273_p2();
    void thread_j_1_fu_325_p2();
    void thread_j_2_fu_384_p2();
    void thread_j_3_fu_444_p2();
    void thread_k_1_fu_456_p2();
    void thread_tmp1_cast_fu_398_p1();
    void thread_tmp5_fu_390_p3();
    void thread_tmp_10_fu_412_p4();
    void thread_tmp_11_fu_421_p1();
    void thread_tmp_12_fu_501_p1();
    void thread_tmp_13_fu_505_p3();
    void thread_tmp_14_fu_513_p1();
    void thread_tmp_15_fu_466_p3();
    void thread_tmp_16_fu_474_p1();
    void thread_tmp_17_fu_462_p1();
    void thread_tmp_18_fu_479_p1();
    void thread_tmp_19_fu_483_p3();
    void thread_tmp_1_fu_284_p2();
    void thread_tmp_20_fu_491_p1();
    void thread_tmp_2_fu_296_p1();
    void thread_tmp_3_fu_301_p2();
    void thread_tmp_4_fu_362_p1();
    void thread_tmp_5_cast_fu_374_p1();
    void thread_tmp_5_fu_366_p3();
    void thread_tmp_6_fu_331_p1();
    void thread_tmp_7_fu_335_p4();
    void thread_tmp_8_fu_345_p1();
    void thread_tmp_9_fu_402_p2();
    void thread_tmp_fu_279_p1();
    void thread_tmp_s_fu_407_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
