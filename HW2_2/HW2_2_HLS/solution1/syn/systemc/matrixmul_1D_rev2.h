// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _matrixmul_1D_rev2_HH_
#define _matrixmul_1D_rev2_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "matrixmul_1D_rev2bkb.h"
#include "matrixmul_1D_rev2_A.h"
#include "matrixmul_1D_rev2_AXILiteS_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_AXILITES_ADDR_WIDTH = 6,
         unsigned int C_S_AXI_AXILITES_DATA_WIDTH = 32>
struct matrixmul_1D_rev2 : public sc_module {
    // Port declarations 29
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<8> > Input_r_TDATA;
    sc_in< sc_logic > Input_r_TVALID;
    sc_out< sc_logic > Input_r_TREADY;
    sc_out< sc_lv<32> > AB_TDATA;
    sc_out< sc_logic > AB_TVALID;
    sc_in< sc_logic > AB_TREADY;
    sc_in< sc_logic > s_axi_AXILiteS_AWVALID;
    sc_out< sc_logic > s_axi_AXILiteS_AWREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_AWADDR;
    sc_in< sc_logic > s_axi_AXILiteS_WVALID;
    sc_out< sc_logic > s_axi_AXILiteS_WREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_WDATA;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH/8> > s_axi_AXILiteS_WSTRB;
    sc_in< sc_logic > s_axi_AXILiteS_ARVALID;
    sc_out< sc_logic > s_axi_AXILiteS_ARREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_ARADDR;
    sc_out< sc_logic > s_axi_AXILiteS_RVALID;
    sc_in< sc_logic > s_axi_AXILiteS_RREADY;
    sc_out< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_RDATA;
    sc_out< sc_lv<2> > s_axi_AXILiteS_RRESP;
    sc_out< sc_logic > s_axi_AXILiteS_BVALID;
    sc_in< sc_logic > s_axi_AXILiteS_BREADY;
    sc_out< sc_lv<2> > s_axi_AXILiteS_BRESP;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    matrixmul_1D_rev2(sc_module_name name);
    SC_HAS_PROCESS(matrixmul_1D_rev2);

    ~matrixmul_1D_rev2();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    matrixmul_1D_rev2_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>* matrixmul_1D_rev2_AXILiteS_s_axi_U;
    matrixmul_1D_rev2_A* A_U;
    matrixmul_1D_rev2_A* B_U;
    matrixmul_1D_rev2bkb<1,1,8,8,32,32>* matrixmul_1D_rev2bkb_U1;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<18> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > lm;
    sc_signal< sc_lv<32> > ln;
    sc_signal< sc_lv<32> > lp;
    sc_signal< sc_lv<8> > Input_r_0_data_out;
    sc_signal< sc_logic > Input_r_0_vld_in;
    sc_signal< sc_logic > Input_r_0_vld_out;
    sc_signal< sc_logic > Input_r_0_ack_in;
    sc_signal< sc_logic > Input_r_0_ack_out;
    sc_signal< sc_lv<8> > Input_r_0_payload_A;
    sc_signal< sc_lv<8> > Input_r_0_payload_B;
    sc_signal< sc_logic > Input_r_0_sel_rd;
    sc_signal< sc_logic > Input_r_0_sel_wr;
    sc_signal< sc_logic > Input_r_0_sel;
    sc_signal< sc_logic > Input_r_0_load_A;
    sc_signal< sc_logic > Input_r_0_load_B;
    sc_signal< sc_lv<2> > Input_r_0_state;
    sc_signal< sc_logic > Input_r_0_state_cmp_full;
    sc_signal< sc_lv<32> > AB_1_data_out;
    sc_signal< sc_logic > AB_1_vld_in;
    sc_signal< sc_logic > AB_1_vld_out;
    sc_signal< sc_logic > AB_1_ack_in;
    sc_signal< sc_logic > AB_1_ack_out;
    sc_signal< sc_lv<32> > AB_1_payload_A;
    sc_signal< sc_lv<32> > AB_1_payload_B;
    sc_signal< sc_logic > AB_1_sel_rd;
    sc_signal< sc_logic > AB_1_sel_wr;
    sc_signal< sc_logic > AB_1_sel;
    sc_signal< sc_logic > AB_1_load_A;
    sc_signal< sc_logic > AB_1_load_B;
    sc_signal< sc_lv<2> > AB_1_state;
    sc_signal< sc_logic > AB_1_state_cmp_full;
    sc_signal< sc_logic > Input_r_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > AB_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<1> > tmp_19_fu_590_p2;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_lv<32> > lp_read_reg_648;
    sc_signal< sc_lv<32> > ln_read_reg_654;
    sc_signal< sc_lv<32> > lm_read_reg_661;
    sc_signal< sc_lv<14> > indvarinc_fu_343_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<14> > indvarinc1_fu_360_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<31> > i_1_fu_386_p2;
    sc_signal< sc_lv<31> > i_1_reg_686;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > tmp_5_fu_396_p3;
    sc_signal< sc_lv<32> > tmp_5_reg_691;
    sc_signal< sc_lv<1> > tmp_4_fu_381_p2;
    sc_signal< sc_lv<31> > j_1_fu_413_p2;
    sc_signal< sc_lv<31> > j_1_reg_699;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > tmp_8_fu_419_p2;
    sc_signal< sc_lv<32> > tmp_8_reg_704;
    sc_signal< sc_lv<1> > tmp_6_fu_408_p2;
    sc_signal< sc_lv<31> > i_2_fu_437_p2;
    sc_signal< sc_lv<31> > i_2_reg_712;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > tmp_s_fu_447_p3;
    sc_signal< sc_lv<32> > tmp_s_reg_717;
    sc_signal< sc_lv<1> > tmp_7_fu_432_p2;
    sc_signal< sc_lv<31> > j_2_fu_464_p2;
    sc_signal< sc_lv<31> > j_2_reg_725;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > tmp_12_fu_470_p2;
    sc_signal< sc_lv<32> > tmp_12_reg_730;
    sc_signal< sc_lv<1> > tmp_10_fu_459_p2;
    sc_signal< sc_lv<31> > i_3_fu_488_p2;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<32> > m_1_fu_494_p2;
    sc_signal< sc_lv<1> > tmp_11_fu_483_p2;
    sc_signal< sc_lv<31> > i_4_fu_509_p2;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<32> > n_1_fu_515_p2;
    sc_signal< sc_lv<1> > tmp_14_fu_504_p2;
    sc_signal< sc_lv<31> > i_5_fu_530_p2;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<32> > p_1_fu_536_p2;
    sc_signal< sc_lv<1> > tmp_15_fu_525_p2;
    sc_signal< sc_lv<31> > i_6_fu_552_p2;
    sc_signal< sc_lv<31> > i_6_reg_777;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<32> > tmp_17_fu_562_p3;
    sc_signal< sc_lv<32> > tmp_17_reg_782;
    sc_signal< sc_lv<1> > tmp_16_fu_546_p2;
    sc_signal< sc_lv<32> > j7_cast_fu_570_p1;
    sc_signal< sc_lv<32> > j7_cast_reg_787;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<31> > j_3_fu_580_p2;
    sc_signal< sc_lv<31> > j_3_reg_795;
    sc_signal< sc_lv<31> > k_1_fu_596_p2;
    sc_signal< sc_lv<31> > k_1_reg_803;
    sc_signal< bool > ap_block_state15_io;
    sc_signal< sc_lv<8> > A_q0;
    sc_signal< sc_lv<8> > A_load_reg_818;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<8> > B_q0;
    sc_signal< sc_lv<8> > B_load_reg_823;
    sc_signal< sc_lv<32> > grp_fu_640_p3;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<14> > A_address0;
    sc_signal< sc_logic > A_ce0;
    sc_signal< sc_logic > A_we0;
    sc_signal< sc_lv<8> > A_d0;
    sc_signal< sc_lv<14> > B_address0;
    sc_signal< sc_logic > B_ce0;
    sc_signal< sc_logic > B_we0;
    sc_signal< sc_lv<8> > B_d0;
    sc_signal< sc_lv<14> > invdar_reg_161;
    sc_signal< sc_lv<1> > tmp_1_fu_354_p2;
    sc_signal< sc_lv<14> > invdar1_reg_172;
    sc_signal< sc_lv<1> > tmp_3_fu_371_p2;
    sc_signal< sc_lv<31> > i_reg_183;
    sc_signal< sc_lv<31> > j_reg_194;
    sc_signal< sc_lv<31> > i1_reg_205;
    sc_signal< sc_lv<31> > j2_reg_216;
    sc_signal< sc_lv<31> > i3_reg_227;
    sc_signal< sc_lv<32> > m_reg_238;
    sc_signal< sc_lv<31> > i4_reg_250;
    sc_signal< sc_lv<32> > n_reg_261;
    sc_signal< sc_lv<32> > p_reg_273;
    sc_signal< sc_lv<31> > i5_reg_285;
    sc_signal< sc_lv<31> > i6_reg_296;
    sc_signal< sc_lv<1> > tmp_18_fu_574_p2;
    sc_signal< sc_lv<31> > j7_reg_307;
    sc_signal< sc_lv<32> > sum_reg_318;
    sc_signal< sc_lv<31> > k_reg_332;
    sc_signal< sc_lv<64> > tmp_fu_349_p1;
    sc_signal< sc_lv<64> > tmp_2_fu_366_p1;
    sc_signal< sc_lv<64> > tmp_9_fu_424_p1;
    sc_signal< sc_lv<64> > tmp_13_fu_475_p1;
    sc_signal< sc_lv<64> > tmp_21_fu_607_p1;
    sc_signal< sc_lv<64> > tmp_24_fu_629_p1;
    sc_signal< sc_lv<32> > i_cast_fu_377_p1;
    sc_signal< sc_lv<25> > tmp_26_fu_392_p1;
    sc_signal< sc_lv<32> > j_cast_fu_404_p1;
    sc_signal< sc_lv<32> > i1_cast_fu_428_p1;
    sc_signal< sc_lv<25> > tmp_27_fu_443_p1;
    sc_signal< sc_lv<32> > j2_cast_fu_455_p1;
    sc_signal< sc_lv<32> > i3_cast_fu_479_p1;
    sc_signal< sc_lv<32> > i4_cast_fu_500_p1;
    sc_signal< sc_lv<32> > i5_cast_fu_521_p1;
    sc_signal< sc_lv<32> > i6_cast_fu_542_p1;
    sc_signal< sc_lv<25> > tmp_31_fu_558_p1;
    sc_signal< sc_lv<32> > k_cast_fu_586_p1;
    sc_signal< sc_lv<32> > tmp_20_fu_602_p2;
    sc_signal< sc_lv<25> > tmp_32_fu_612_p1;
    sc_signal< sc_lv<32> > tmp_22_fu_616_p3;
    sc_signal< sc_lv<32> > tmp_23_fu_624_p2;
    sc_signal< sc_lv<8> > grp_fu_640_p0;
    sc_signal< sc_lv<8> > grp_fu_640_p1;
    sc_signal< sc_lv<18> > ap_NS_fsm;
    sc_signal< sc_lv<16> > grp_fu_640_p00;
    sc_signal< sc_lv<16> > grp_fu_640_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<18> ap_ST_fsm_state1;
    static const sc_lv<18> ap_ST_fsm_state2;
    static const sc_lv<18> ap_ST_fsm_state3;
    static const sc_lv<18> ap_ST_fsm_state4;
    static const sc_lv<18> ap_ST_fsm_state5;
    static const sc_lv<18> ap_ST_fsm_state6;
    static const sc_lv<18> ap_ST_fsm_state7;
    static const sc_lv<18> ap_ST_fsm_state8;
    static const sc_lv<18> ap_ST_fsm_state9;
    static const sc_lv<18> ap_ST_fsm_state10;
    static const sc_lv<18> ap_ST_fsm_state11;
    static const sc_lv<18> ap_ST_fsm_state12;
    static const sc_lv<18> ap_ST_fsm_state13;
    static const sc_lv<18> ap_ST_fsm_state14;
    static const sc_lv<18> ap_ST_fsm_state15;
    static const sc_lv<18> ap_ST_fsm_state16;
    static const sc_lv<18> ap_ST_fsm_state17;
    static const sc_lv<18> ap_ST_fsm_state18;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_11;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_D;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<14> ap_const_lv14_1;
    static const sc_lv<14> ap_const_lv14_3FFF;
    static const sc_lv<31> ap_const_lv31_1;
    static const sc_lv<7> ap_const_lv7_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_AB_1_ack_in();
    void thread_AB_1_ack_out();
    void thread_AB_1_data_out();
    void thread_AB_1_load_A();
    void thread_AB_1_load_B();
    void thread_AB_1_sel();
    void thread_AB_1_state_cmp_full();
    void thread_AB_1_vld_in();
    void thread_AB_1_vld_out();
    void thread_AB_TDATA();
    void thread_AB_TDATA_blk_n();
    void thread_AB_TVALID();
    void thread_A_address0();
    void thread_A_ce0();
    void thread_A_d0();
    void thread_A_we0();
    void thread_B_address0();
    void thread_B_ce0();
    void thread_B_d0();
    void thread_B_we0();
    void thread_Input_r_0_ack_in();
    void thread_Input_r_0_ack_out();
    void thread_Input_r_0_data_out();
    void thread_Input_r_0_load_A();
    void thread_Input_r_0_load_B();
    void thread_Input_r_0_sel();
    void thread_Input_r_0_state_cmp_full();
    void thread_Input_r_0_vld_in();
    void thread_Input_r_0_vld_out();
    void thread_Input_r_TDATA_blk_n();
    void thread_Input_r_TREADY();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_state15_io();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_grp_fu_640_p0();
    void thread_grp_fu_640_p00();
    void thread_grp_fu_640_p1();
    void thread_grp_fu_640_p10();
    void thread_i1_cast_fu_428_p1();
    void thread_i3_cast_fu_479_p1();
    void thread_i4_cast_fu_500_p1();
    void thread_i5_cast_fu_521_p1();
    void thread_i6_cast_fu_542_p1();
    void thread_i_1_fu_386_p2();
    void thread_i_2_fu_437_p2();
    void thread_i_3_fu_488_p2();
    void thread_i_4_fu_509_p2();
    void thread_i_5_fu_530_p2();
    void thread_i_6_fu_552_p2();
    void thread_i_cast_fu_377_p1();
    void thread_indvarinc1_fu_360_p2();
    void thread_indvarinc_fu_343_p2();
    void thread_j2_cast_fu_455_p1();
    void thread_j7_cast_fu_570_p1();
    void thread_j_1_fu_413_p2();
    void thread_j_2_fu_464_p2();
    void thread_j_3_fu_580_p2();
    void thread_j_cast_fu_404_p1();
    void thread_k_1_fu_596_p2();
    void thread_k_cast_fu_586_p1();
    void thread_m_1_fu_494_p2();
    void thread_n_1_fu_515_p2();
    void thread_p_1_fu_536_p2();
    void thread_tmp_10_fu_459_p2();
    void thread_tmp_11_fu_483_p2();
    void thread_tmp_12_fu_470_p2();
    void thread_tmp_13_fu_475_p1();
    void thread_tmp_14_fu_504_p2();
    void thread_tmp_15_fu_525_p2();
    void thread_tmp_16_fu_546_p2();
    void thread_tmp_17_fu_562_p3();
    void thread_tmp_18_fu_574_p2();
    void thread_tmp_19_fu_590_p2();
    void thread_tmp_1_fu_354_p2();
    void thread_tmp_20_fu_602_p2();
    void thread_tmp_21_fu_607_p1();
    void thread_tmp_22_fu_616_p3();
    void thread_tmp_23_fu_624_p2();
    void thread_tmp_24_fu_629_p1();
    void thread_tmp_26_fu_392_p1();
    void thread_tmp_27_fu_443_p1();
    void thread_tmp_2_fu_366_p1();
    void thread_tmp_31_fu_558_p1();
    void thread_tmp_32_fu_612_p1();
    void thread_tmp_3_fu_371_p2();
    void thread_tmp_4_fu_381_p2();
    void thread_tmp_5_fu_396_p3();
    void thread_tmp_6_fu_408_p2();
    void thread_tmp_7_fu_432_p2();
    void thread_tmp_8_fu_419_p2();
    void thread_tmp_9_fu_424_p1();
    void thread_tmp_fu_349_p1();
    void thread_tmp_s_fu_447_p3();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
