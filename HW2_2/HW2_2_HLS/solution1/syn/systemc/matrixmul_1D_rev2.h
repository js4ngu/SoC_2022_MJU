// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _matrixmul_1D_rev2_HH_
#define _matrixmul_1D_rev2_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "matrixmul_1D_rev2bkb.h"
#include "matrixmul_1D_rev2_A.h"

namespace ap_rtl {

struct matrixmul_1D_rev2 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<15> > Input_r_address0;
    sc_out< sc_logic > Input_r_ce0;
    sc_in< sc_lv<8> > Input_r_q0;
    sc_out< sc_lv<14> > AB_address0;
    sc_out< sc_logic > AB_ce0;
    sc_out< sc_logic > AB_we0;
    sc_out< sc_lv<32> > AB_d0;


    // Module declarations
    matrixmul_1D_rev2(sc_module_name name);
    SC_HAS_PROCESS(matrixmul_1D_rev2);

    ~matrixmul_1D_rev2();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    matrixmul_1D_rev2_A* A_U;
    matrixmul_1D_rev2_A* B_U;
    matrixmul_1D_rev2bkb<1,1,8,8,19,19>* matrixmul_1D_rev2bkb_U1;
    sc_signal< sc_lv<14> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<14> > indvarinc_fu_280_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<14> > indvarinc1_fu_297_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<2> > i_1_fu_320_p2;
    sc_signal< sc_lv<2> > i_1_reg_553;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<2> > j_1_fu_332_p2;
    sc_signal< sc_lv<2> > j_1_reg_561;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<64> > tmp_8_fu_348_p1;
    sc_signal< sc_lv<64> > tmp_8_reg_566;
    sc_signal< sc_lv<1> > exitcond5_fu_326_p2;
    sc_signal< sc_lv<2> > i_2_fu_359_p2;
    sc_signal< sc_lv<2> > i_2_reg_579;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<9> > tmp_5_fu_365_p3;
    sc_signal< sc_lv<9> > tmp_5_reg_584;
    sc_signal< sc_lv<1> > exitcond4_fu_353_p2;
    sc_signal< sc_lv<2> > j_2_fu_379_p2;
    sc_signal< sc_lv<2> > j_2_reg_592;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<1> > exitcond3_fu_373_p2;
    sc_signal< sc_lv<4> > i_3_fu_428_p2;
    sc_signal< sc_lv<4> > i_3_reg_605;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<4> > j_3_fu_440_p2;
    sc_signal< sc_lv<4> > j_3_reg_613;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<4> > k_1_fu_452_p2;
    sc_signal< sc_lv<4> > k_1_reg_621;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<1> > exitcond7_fu_446_p2;
    sc_signal< sc_lv<8> > A_q0;
    sc_signal< sc_lv<8> > A_load_reg_636;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<8> > B_q0;
    sc_signal< sc_lv<8> > B_load_reg_641;
    sc_signal< sc_lv<19> > grp_fu_526_p3;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<14> > A_address0;
    sc_signal< sc_logic > A_ce0;
    sc_signal< sc_logic > A_we0;
    sc_signal< sc_lv<8> > A_d0;
    sc_signal< sc_lv<14> > B_address0;
    sc_signal< sc_logic > B_ce0;
    sc_signal< sc_logic > B_we0;
    sc_signal< sc_lv<8> > B_d0;
    sc_signal< sc_lv<14> > invdar_reg_164;
    sc_signal< sc_lv<1> > tmp_1_fu_291_p2;
    sc_signal< sc_lv<14> > invdar1_reg_175;
    sc_signal< sc_lv<1> > tmp_3_fu_308_p2;
    sc_signal< sc_lv<2> > i_reg_186;
    sc_signal< sc_lv<2> > j_reg_198;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > exitcond6_fu_314_p2;
    sc_signal< sc_lv<2> > i1_reg_209;
    sc_signal< sc_lv<2> > j2_reg_221;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<4> > i6_reg_233;
    sc_signal< sc_lv<1> > exitcond9_fu_434_p2;
    sc_signal< sc_lv<4> > j7_reg_245;
    sc_signal< sc_lv<1> > exitcond_fu_422_p2;
    sc_signal< sc_lv<19> > sum_reg_257;
    sc_signal< sc_lv<4> > k_reg_269;
    sc_signal< sc_lv<64> > tmp_fu_286_p1;
    sc_signal< sc_lv<64> > tmp_2_fu_303_p1;
    sc_signal< sc_lv<64> > tmp_s_fu_402_p1;
    sc_signal< sc_lv<64> > tmp_6_fu_417_p1;
    sc_signal< sc_lv<64> > tmp_15_fu_472_p1;
    sc_signal< sc_lv<64> > tmp_18_fu_491_p1;
    sc_signal< sc_lv<64> > tmp_12_fu_515_p1;
    sc_signal< sc_lv<9> > tmp_7_fu_338_p4;
    sc_signal< sc_lv<8> > tmp1_fu_385_p3;
    sc_signal< sc_lv<9> > tmp1_cast_fu_393_p1;
    sc_signal< sc_lv<9> > tmp_9_fu_397_p2;
    sc_signal< sc_lv<9> > tmp_4_fu_407_p4;
    sc_signal< sc_lv<3> > tmp_13_fu_458_p1;
    sc_signal< sc_lv<10> > tmp_14_fu_462_p4;
    sc_signal< sc_lv<3> > tmp_16_fu_477_p1;
    sc_signal< sc_lv<10> > tmp_17_fu_481_p4;
    sc_signal< sc_lv<3> > tmp_10_fu_501_p1;
    sc_signal< sc_lv<10> > tmp_11_fu_505_p4;
    sc_signal< sc_lv<8> > grp_fu_526_p0;
    sc_signal< sc_lv<8> > grp_fu_526_p1;
    sc_signal< sc_lv<14> > ap_NS_fsm;
    sc_signal< sc_lv<16> > grp_fu_526_p00;
    sc_signal< sc_lv<16> > grp_fu_526_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<14> ap_ST_fsm_state1;
    static const sc_lv<14> ap_ST_fsm_state2;
    static const sc_lv<14> ap_ST_fsm_state3;
    static const sc_lv<14> ap_ST_fsm_state4;
    static const sc_lv<14> ap_ST_fsm_state5;
    static const sc_lv<14> ap_ST_fsm_state6;
    static const sc_lv<14> ap_ST_fsm_state7;
    static const sc_lv<14> ap_ST_fsm_state8;
    static const sc_lv<14> ap_ST_fsm_state9;
    static const sc_lv<14> ap_ST_fsm_state10;
    static const sc_lv<14> ap_ST_fsm_state11;
    static const sc_lv<14> ap_ST_fsm_state12;
    static const sc_lv<14> ap_ST_fsm_state13;
    static const sc_lv<14> ap_ST_fsm_state14;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<19> ap_const_lv19_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<14> ap_const_lv14_1;
    static const sc_lv<14> ap_const_lv14_3FFF;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_AB_address0();
    void thread_AB_ce0();
    void thread_AB_d0();
    void thread_AB_we0();
    void thread_A_address0();
    void thread_A_ce0();
    void thread_A_d0();
    void thread_A_we0();
    void thread_B_address0();
    void thread_B_ce0();
    void thread_B_d0();
    void thread_B_we0();
    void thread_Input_r_address0();
    void thread_Input_r_ce0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exitcond3_fu_373_p2();
    void thread_exitcond4_fu_353_p2();
    void thread_exitcond5_fu_326_p2();
    void thread_exitcond6_fu_314_p2();
    void thread_exitcond7_fu_446_p2();
    void thread_exitcond9_fu_434_p2();
    void thread_exitcond_fu_422_p2();
    void thread_grp_fu_526_p0();
    void thread_grp_fu_526_p00();
    void thread_grp_fu_526_p1();
    void thread_grp_fu_526_p10();
    void thread_i_1_fu_320_p2();
    void thread_i_2_fu_359_p2();
    void thread_i_3_fu_428_p2();
    void thread_indvarinc1_fu_297_p2();
    void thread_indvarinc_fu_280_p2();
    void thread_j_1_fu_332_p2();
    void thread_j_2_fu_379_p2();
    void thread_j_3_fu_440_p2();
    void thread_k_1_fu_452_p2();
    void thread_tmp1_cast_fu_393_p1();
    void thread_tmp1_fu_385_p3();
    void thread_tmp_10_fu_501_p1();
    void thread_tmp_11_fu_505_p4();
    void thread_tmp_12_fu_515_p1();
    void thread_tmp_13_fu_458_p1();
    void thread_tmp_14_fu_462_p4();
    void thread_tmp_15_fu_472_p1();
    void thread_tmp_16_fu_477_p1();
    void thread_tmp_17_fu_481_p4();
    void thread_tmp_18_fu_491_p1();
    void thread_tmp_1_fu_291_p2();
    void thread_tmp_2_fu_303_p1();
    void thread_tmp_3_fu_308_p2();
    void thread_tmp_4_fu_407_p4();
    void thread_tmp_5_fu_365_p3();
    void thread_tmp_6_fu_417_p1();
    void thread_tmp_7_fu_338_p4();
    void thread_tmp_8_fu_348_p1();
    void thread_tmp_9_fu_397_p2();
    void thread_tmp_fu_286_p1();
    void thread_tmp_s_fu_402_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
