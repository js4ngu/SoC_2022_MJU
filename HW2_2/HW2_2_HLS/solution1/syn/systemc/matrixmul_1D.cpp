// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "matrixmul_1D.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic matrixmul_1D::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic matrixmul_1D::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<18> matrixmul_1D::ap_ST_fsm_state1 = "1";
const sc_lv<18> matrixmul_1D::ap_ST_fsm_state2 = "10";
const sc_lv<18> matrixmul_1D::ap_ST_fsm_state3 = "100";
const sc_lv<18> matrixmul_1D::ap_ST_fsm_state4 = "1000";
const sc_lv<18> matrixmul_1D::ap_ST_fsm_state5 = "10000";
const sc_lv<18> matrixmul_1D::ap_ST_fsm_state6 = "100000";
const sc_lv<18> matrixmul_1D::ap_ST_fsm_state7 = "1000000";
const sc_lv<18> matrixmul_1D::ap_ST_fsm_state8 = "10000000";
const sc_lv<18> matrixmul_1D::ap_ST_fsm_state9 = "100000000";
const sc_lv<18> matrixmul_1D::ap_ST_fsm_state10 = "1000000000";
const sc_lv<18> matrixmul_1D::ap_ST_fsm_state11 = "10000000000";
const sc_lv<18> matrixmul_1D::ap_ST_fsm_state12 = "100000000000";
const sc_lv<18> matrixmul_1D::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<18> matrixmul_1D::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<18> matrixmul_1D::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<18> matrixmul_1D::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<18> matrixmul_1D::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<18> matrixmul_1D::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<32> matrixmul_1D::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> matrixmul_1D::ap_const_lv32_1 = "1";
const sc_lv<1> matrixmul_1D::ap_const_lv1_0 = "0";
const sc_lv<32> matrixmul_1D::ap_const_lv32_2 = "10";
const sc_lv<32> matrixmul_1D::ap_const_lv32_4 = "100";
const sc_lv<32> matrixmul_1D::ap_const_lv32_5 = "101";
const sc_lv<32> matrixmul_1D::ap_const_lv32_7 = "111";
const sc_lv<32> matrixmul_1D::ap_const_lv32_8 = "1000";
const sc_lv<32> matrixmul_1D::ap_const_lv32_A = "1010";
const sc_lv<32> matrixmul_1D::ap_const_lv32_B = "1011";
const sc_lv<32> matrixmul_1D::ap_const_lv32_C = "1100";
const sc_lv<32> matrixmul_1D::ap_const_lv32_D = "1101";
const sc_lv<32> matrixmul_1D::ap_const_lv32_E = "1110";
const sc_lv<32> matrixmul_1D::ap_const_lv32_F = "1111";
const sc_lv<32> matrixmul_1D::ap_const_lv32_10 = "10000";
const sc_lv<9> matrixmul_1D::ap_const_lv9_0 = "000000000";
const sc_lv<1> matrixmul_1D::ap_const_lv1_1 = "1";
const sc_lv<32> matrixmul_1D::ap_const_lv32_3 = "11";
const sc_lv<8> matrixmul_1D::ap_const_lv8_0 = "00000000";
const sc_lv<2> matrixmul_1D::ap_const_lv2_0 = "00";
const sc_lv<32> matrixmul_1D::ap_const_lv32_6 = "110";
const sc_lv<32> matrixmul_1D::ap_const_lv32_9 = "1001";
const sc_lv<4> matrixmul_1D::ap_const_lv4_0 = "0000";
const sc_lv<19> matrixmul_1D::ap_const_lv19_0 = "0000000000000000000";
const sc_lv<32> matrixmul_1D::ap_const_lv32_11 = "10001";
const sc_lv<9> matrixmul_1D::ap_const_lv9_100 = "100000000";
const sc_lv<9> matrixmul_1D::ap_const_lv9_1 = "1";
const sc_lv<7> matrixmul_1D::ap_const_lv7_0 = "0000000";
const sc_lv<8> matrixmul_1D::ap_const_lv8_80 = "10000000";
const sc_lv<8> matrixmul_1D::ap_const_lv8_1 = "1";
const sc_lv<2> matrixmul_1D::ap_const_lv2_3 = "11";
const sc_lv<2> matrixmul_1D::ap_const_lv2_1 = "1";
const sc_lv<5> matrixmul_1D::ap_const_lv5_0 = "00000";
const sc_lv<6> matrixmul_1D::ap_const_lv6_20 = "100000";
const sc_lv<4> matrixmul_1D::ap_const_lv4_8 = "1000";
const sc_lv<4> matrixmul_1D::ap_const_lv4_1 = "1";
const sc_lv<3> matrixmul_1D::ap_const_lv3_0 = "000";
const bool matrixmul_1D::ap_const_boolean_1 = true;

matrixmul_1D::matrixmul_1D(sc_module_name name) : sc_module(name), mVcdFile(0) {
    Input_U = new matrixmul_1D_Input("Input_U");
    Input_U->clk(ap_clk);
    Input_U->reset(ap_rst);
    Input_U->address0(Input_address0);
    Input_U->ce0(Input_ce0);
    Input_U->we0(Input_we0);
    Input_U->d0(Input_orign_q0);
    Input_U->q0(Input_q0);
    A_U = new matrixmul_1D_A("A_U");
    A_U->clk(ap_clk);
    A_U->reset(ap_rst);
    A_U->address0(A_address0);
    A_U->ce0(A_ce0);
    A_U->we0(A_we0);
    A_U->d0(Input_q0);
    A_U->q0(A_q0);
    B_U = new matrixmul_1D_A("B_U");
    B_U->clk(ap_clk);
    B_U->reset(ap_rst);
    B_U->address0(B_address0);
    B_U->ce0(B_ce0);
    B_U->we0(B_we0);
    B_U->d0(Input_q0);
    B_U->q0(B_q0);
    AB_2D_U = new matrixmul_1D_AB_2D("AB_2D_U");
    AB_2D_U->clk(ap_clk);
    AB_2D_U->reset(ap_rst);
    AB_2D_U->address0(AB_2D_address0);
    AB_2D_U->ce0(AB_2D_ce0);
    AB_2D_U->we0(AB_2D_we0);
    AB_2D_U->d0(sum_reg_304);
    AB_2D_U->q0(AB_2D_q0);
    matrixmul_1D_mac_bkb_U1 = new matrixmul_1D_mac_bkb<1,1,8,8,19,19>("matrixmul_1D_mac_bkb_U1");
    matrixmul_1D_mac_bkb_U1->din0(grp_fu_667_p0);
    matrixmul_1D_mac_bkb_U1->din1(grp_fu_667_p1);
    matrixmul_1D_mac_bkb_U1->din2(sum_reg_304);
    matrixmul_1D_mac_bkb_U1->dout(grp_fu_667_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_AB_2D_address0);
    sensitive << ( AB_2D_addr_reg_769 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( tmp_23_cast_fu_648_p1 );

    SC_METHOD(thread_AB_2D_ce0);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_AB_2D_we0);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond10_fu_539_p2 );

    SC_METHOD(thread_AB_address0);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( tmp_15_fu_663_p1 );

    SC_METHOD(thread_AB_ce0);
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_AB_d0);
    sensitive << ( AB_2D_q0 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_AB_we0);
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_A_address0);
    sensitive << ( tmp_8_reg_722 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_20_fu_561_p1 );

    SC_METHOD(thread_A_ce0);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_A_we0);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_B_address0);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_10_fu_495_p1 );
    sensitive << ( tmp_22_fu_576_p1 );

    SC_METHOD(thread_B_ce0);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_B_we0);
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_Input_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_8_fu_439_p1 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_3_cast_fu_401_p1 );
    sensitive << ( tmp_2_fu_480_p1 );

    SC_METHOD(thread_Input_ce0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_Input_orign_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_5_fu_387_p1 );

    SC_METHOD(thread_Input_orign_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_Input_we0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( exitcond1_fu_587_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( exitcond1_fu_587_p2 );

    SC_METHOD(thread_exitcond10_fu_539_p2);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( k_reg_293 );

    SC_METHOD(thread_exitcond1_fu_587_p2);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( i5_reg_317 );

    SC_METHOD(thread_exitcond2_fu_456_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( j7_reg_257 );

    SC_METHOD(thread_exitcond3_fu_444_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( i6_reg_245 );

    SC_METHOD(thread_exitcond4_fu_417_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( j5_reg_234 );

    SC_METHOD(thread_exitcond5_fu_405_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i4_reg_222 );

    SC_METHOD(thread_exitcond6_fu_363_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_reg_211 );

    SC_METHOD(thread_exitcond7_fu_339_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i3_reg_199 );

    SC_METHOD(thread_exitcond8_fu_500_p2);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( i8_reg_269 );

    SC_METHOD(thread_exitcond9_fu_512_p2);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( j9_reg_281 );

    SC_METHOD(thread_exitcond_fu_627_p2);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( j4_reg_328 );

    SC_METHOD(thread_grp_fu_667_p0);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( grp_fu_667_p00 );

    SC_METHOD(thread_grp_fu_667_p00);
    sensitive << ( A_load_reg_792 );

    SC_METHOD(thread_grp_fu_667_p1);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( grp_fu_667_p10 );

    SC_METHOD(thread_grp_fu_667_p10);
    sensitive << ( B_load_reg_797 );

    SC_METHOD(thread_i_1_fu_411_p2);
    sensitive << ( i4_reg_222 );

    SC_METHOD(thread_i_2_fu_450_p2);
    sensitive << ( i6_reg_245 );

    SC_METHOD(thread_i_3_fu_506_p2);
    sensitive << ( i8_reg_269 );

    SC_METHOD(thread_i_4_fu_593_p2);
    sensitive << ( i5_reg_317 );

    SC_METHOD(thread_i_fu_345_p2);
    sensitive << ( i3_reg_199 );

    SC_METHOD(thread_j4_cast2_fu_623_p1);
    sensitive << ( j4_reg_328 );

    SC_METHOD(thread_j_1_fu_369_p2);
    sensitive << ( j_reg_211 );

    SC_METHOD(thread_j_2_fu_423_p2);
    sensitive << ( j5_reg_234 );

    SC_METHOD(thread_j_3_fu_462_p2);
    sensitive << ( j7_reg_257 );

    SC_METHOD(thread_j_4_fu_633_p2);
    sensitive << ( j4_reg_328 );

    SC_METHOD(thread_j_5_fu_518_p2);
    sensitive << ( j9_reg_281 );

    SC_METHOD(thread_k_1_fu_545_p2);
    sensitive << ( k_reg_293 );

    SC_METHOD(thread_tmp_10_fu_495_p1);
    sensitive << ( tmp_6_fu_485_p4 );

    SC_METHOD(thread_tmp_11_fu_599_p3);
    sensitive << ( i5_reg_317 );

    SC_METHOD(thread_tmp_12_cast_fu_639_p1);
    sensitive << ( j4_reg_328 );

    SC_METHOD(thread_tmp_12_fu_611_p1);
    sensitive << ( i5_reg_317 );

    SC_METHOD(thread_tmp_13_fu_524_p4);
    sensitive << ( i8_reg_269 );
    sensitive << ( j9_reg_281 );

    SC_METHOD(thread_tmp_14_fu_653_p2);
    sensitive << ( tmp_s_reg_820 );
    sensitive << ( j4_cast2_fu_623_p1 );

    SC_METHOD(thread_tmp_15_fu_663_p1);
    sensitive << ( tmp_14_reg_838 );

    SC_METHOD(thread_tmp_17_fu_534_p1);
    sensitive << ( tmp_13_fu_524_p4 );

    SC_METHOD(thread_tmp_18_fu_643_p2);
    sensitive << ( tmp_19_cast1_reg_815 );
    sensitive << ( tmp_12_cast_fu_639_p1 );

    SC_METHOD(thread_tmp_19_cast1_fu_607_p1);
    sensitive << ( tmp_11_fu_599_p3 );

    SC_METHOD(thread_tmp_19_fu_551_p4);
    sensitive << ( i8_reg_269 );
    sensitive << ( k_reg_293 );

    SC_METHOD(thread_tmp_1_fu_351_p3);
    sensitive << ( i3_reg_199 );

    SC_METHOD(thread_tmp_20_fu_561_p1);
    sensitive << ( tmp_19_fu_551_p4 );

    SC_METHOD(thread_tmp_21_fu_566_p4);
    sensitive << ( j9_reg_281 );
    sensitive << ( k_reg_293 );

    SC_METHOD(thread_tmp_22_fu_576_p1);
    sensitive << ( tmp_21_fu_566_p4 );

    SC_METHOD(thread_tmp_23_cast_fu_648_p1);
    sensitive << ( tmp_18_fu_643_p2 );

    SC_METHOD(thread_tmp_2_cast_fu_359_p1);
    sensitive << ( tmp_1_fu_351_p3 );

    SC_METHOD(thread_tmp_2_fu_480_p1);
    sensitive << ( tmp_9_fu_468_p5 );

    SC_METHOD(thread_tmp_3_cast_fu_401_p1);
    sensitive << ( tmp_3_reg_701 );

    SC_METHOD(thread_tmp_3_fu_396_p2);
    sensitive << ( tmp_2_cast_reg_683 );
    sensitive << ( tmp_6_cast_fu_392_p1 );

    SC_METHOD(thread_tmp_4_fu_379_p3);
    sensitive << ( j_reg_211 );
    sensitive << ( tmp_fu_375_p1 );

    SC_METHOD(thread_tmp_5_fu_387_p1);
    sensitive << ( tmp_4_fu_379_p3 );

    SC_METHOD(thread_tmp_6_cast_fu_392_p1);
    sensitive << ( j_reg_211 );

    SC_METHOD(thread_tmp_6_fu_485_p4);
    sensitive << ( i6_reg_245 );
    sensitive << ( j7_reg_257 );

    SC_METHOD(thread_tmp_7_fu_429_p4);
    sensitive << ( i4_reg_222 );
    sensitive << ( j5_reg_234 );

    SC_METHOD(thread_tmp_8_fu_439_p1);
    sensitive << ( tmp_7_fu_429_p4 );

    SC_METHOD(thread_tmp_9_fu_468_p5);
    sensitive << ( i6_reg_245 );
    sensitive << ( j7_reg_257 );

    SC_METHOD(thread_tmp_fu_375_p1);
    sensitive << ( i3_reg_199 );

    SC_METHOD(thread_tmp_s_fu_615_p3);
    sensitive << ( tmp_12_fu_611_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond7_fu_339_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond6_fu_363_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond4_fu_417_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( exitcond2_fu_456_p2 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond9_fu_512_p2 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond10_fu_539_p2 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( exitcond1_fu_587_p2 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( exitcond_fu_627_p2 );
    sensitive << ( exitcond5_fu_405_p2 );
    sensitive << ( exitcond3_fu_444_p2 );
    sensitive << ( exitcond8_fu_500_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "matrixmul_1D_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, Input_orign_address0, "(port)Input_orign_address0");
    sc_trace(mVcdFile, Input_orign_ce0, "(port)Input_orign_ce0");
    sc_trace(mVcdFile, Input_orign_q0, "(port)Input_orign_q0");
    sc_trace(mVcdFile, AB_address0, "(port)AB_address0");
    sc_trace(mVcdFile, AB_ce0, "(port)AB_ce0");
    sc_trace(mVcdFile, AB_we0, "(port)AB_we0");
    sc_trace(mVcdFile, AB_d0, "(port)AB_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_fu_345_p2, "i_fu_345_p2");
    sc_trace(mVcdFile, i_reg_678, "i_reg_678");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_2_cast_fu_359_p1, "tmp_2_cast_fu_359_p1");
    sc_trace(mVcdFile, tmp_2_cast_reg_683, "tmp_2_cast_reg_683");
    sc_trace(mVcdFile, exitcond7_fu_339_p2, "exitcond7_fu_339_p2");
    sc_trace(mVcdFile, j_1_fu_369_p2, "j_1_fu_369_p2");
    sc_trace(mVcdFile, j_1_reg_691, "j_1_reg_691");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, exitcond6_fu_363_p2, "exitcond6_fu_363_p2");
    sc_trace(mVcdFile, tmp_3_fu_396_p2, "tmp_3_fu_396_p2");
    sc_trace(mVcdFile, tmp_3_reg_701, "tmp_3_reg_701");
    sc_trace(mVcdFile, i_1_fu_411_p2, "i_1_fu_411_p2");
    sc_trace(mVcdFile, i_1_reg_709, "i_1_reg_709");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, j_2_fu_423_p2, "j_2_fu_423_p2");
    sc_trace(mVcdFile, j_2_reg_717, "j_2_reg_717");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_8_fu_439_p1, "tmp_8_fu_439_p1");
    sc_trace(mVcdFile, tmp_8_reg_722, "tmp_8_reg_722");
    sc_trace(mVcdFile, exitcond4_fu_417_p2, "exitcond4_fu_417_p2");
    sc_trace(mVcdFile, i_2_fu_450_p2, "i_2_fu_450_p2");
    sc_trace(mVcdFile, i_2_reg_735, "i_2_reg_735");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, j_3_fu_462_p2, "j_3_fu_462_p2");
    sc_trace(mVcdFile, j_3_reg_743, "j_3_reg_743");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, exitcond2_fu_456_p2, "exitcond2_fu_456_p2");
    sc_trace(mVcdFile, i_3_fu_506_p2, "i_3_fu_506_p2");
    sc_trace(mVcdFile, i_3_reg_756, "i_3_reg_756");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, j_5_fu_518_p2, "j_5_fu_518_p2");
    sc_trace(mVcdFile, j_5_reg_764, "j_5_reg_764");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, AB_2D_addr_reg_769, "AB_2D_addr_reg_769");
    sc_trace(mVcdFile, exitcond9_fu_512_p2, "exitcond9_fu_512_p2");
    sc_trace(mVcdFile, k_1_fu_545_p2, "k_1_fu_545_p2");
    sc_trace(mVcdFile, k_1_reg_777, "k_1_reg_777");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, exitcond10_fu_539_p2, "exitcond10_fu_539_p2");
    sc_trace(mVcdFile, A_q0, "A_q0");
    sc_trace(mVcdFile, A_load_reg_792, "A_load_reg_792");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, B_q0, "B_q0");
    sc_trace(mVcdFile, B_load_reg_797, "B_load_reg_797");
    sc_trace(mVcdFile, grp_fu_667_p3, "grp_fu_667_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, i_4_fu_593_p2, "i_4_fu_593_p2");
    sc_trace(mVcdFile, i_4_reg_810, "i_4_reg_810");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, tmp_19_cast1_fu_607_p1, "tmp_19_cast1_fu_607_p1");
    sc_trace(mVcdFile, tmp_19_cast1_reg_815, "tmp_19_cast1_reg_815");
    sc_trace(mVcdFile, exitcond1_fu_587_p2, "exitcond1_fu_587_p2");
    sc_trace(mVcdFile, tmp_s_fu_615_p3, "tmp_s_fu_615_p3");
    sc_trace(mVcdFile, tmp_s_reg_820, "tmp_s_reg_820");
    sc_trace(mVcdFile, j_4_fu_633_p2, "j_4_fu_633_p2");
    sc_trace(mVcdFile, j_4_reg_828, "j_4_reg_828");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, exitcond_fu_627_p2, "exitcond_fu_627_p2");
    sc_trace(mVcdFile, tmp_14_fu_653_p2, "tmp_14_fu_653_p2");
    sc_trace(mVcdFile, tmp_14_reg_838, "tmp_14_reg_838");
    sc_trace(mVcdFile, Input_address0, "Input_address0");
    sc_trace(mVcdFile, Input_ce0, "Input_ce0");
    sc_trace(mVcdFile, Input_we0, "Input_we0");
    sc_trace(mVcdFile, Input_q0, "Input_q0");
    sc_trace(mVcdFile, A_address0, "A_address0");
    sc_trace(mVcdFile, A_ce0, "A_ce0");
    sc_trace(mVcdFile, A_we0, "A_we0");
    sc_trace(mVcdFile, B_address0, "B_address0");
    sc_trace(mVcdFile, B_ce0, "B_ce0");
    sc_trace(mVcdFile, B_we0, "B_we0");
    sc_trace(mVcdFile, AB_2D_address0, "AB_2D_address0");
    sc_trace(mVcdFile, AB_2D_ce0, "AB_2D_ce0");
    sc_trace(mVcdFile, AB_2D_we0, "AB_2D_we0");
    sc_trace(mVcdFile, AB_2D_q0, "AB_2D_q0");
    sc_trace(mVcdFile, i3_reg_199, "i3_reg_199");
    sc_trace(mVcdFile, j_reg_211, "j_reg_211");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, i4_reg_222, "i4_reg_222");
    sc_trace(mVcdFile, j5_reg_234, "j5_reg_234");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, exitcond5_fu_405_p2, "exitcond5_fu_405_p2");
    sc_trace(mVcdFile, i6_reg_245, "i6_reg_245");
    sc_trace(mVcdFile, j7_reg_257, "j7_reg_257");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, exitcond3_fu_444_p2, "exitcond3_fu_444_p2");
    sc_trace(mVcdFile, i8_reg_269, "i8_reg_269");
    sc_trace(mVcdFile, j9_reg_281, "j9_reg_281");
    sc_trace(mVcdFile, exitcond8_fu_500_p2, "exitcond8_fu_500_p2");
    sc_trace(mVcdFile, k_reg_293, "k_reg_293");
    sc_trace(mVcdFile, sum_reg_304, "sum_reg_304");
    sc_trace(mVcdFile, i5_reg_317, "i5_reg_317");
    sc_trace(mVcdFile, j4_reg_328, "j4_reg_328");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, tmp_5_fu_387_p1, "tmp_5_fu_387_p1");
    sc_trace(mVcdFile, tmp_3_cast_fu_401_p1, "tmp_3_cast_fu_401_p1");
    sc_trace(mVcdFile, tmp_2_fu_480_p1, "tmp_2_fu_480_p1");
    sc_trace(mVcdFile, tmp_10_fu_495_p1, "tmp_10_fu_495_p1");
    sc_trace(mVcdFile, tmp_17_fu_534_p1, "tmp_17_fu_534_p1");
    sc_trace(mVcdFile, tmp_20_fu_561_p1, "tmp_20_fu_561_p1");
    sc_trace(mVcdFile, tmp_22_fu_576_p1, "tmp_22_fu_576_p1");
    sc_trace(mVcdFile, tmp_23_cast_fu_648_p1, "tmp_23_cast_fu_648_p1");
    sc_trace(mVcdFile, tmp_15_fu_663_p1, "tmp_15_fu_663_p1");
    sc_trace(mVcdFile, tmp_1_fu_351_p3, "tmp_1_fu_351_p3");
    sc_trace(mVcdFile, tmp_fu_375_p1, "tmp_fu_375_p1");
    sc_trace(mVcdFile, tmp_4_fu_379_p3, "tmp_4_fu_379_p3");
    sc_trace(mVcdFile, tmp_6_cast_fu_392_p1, "tmp_6_cast_fu_392_p1");
    sc_trace(mVcdFile, tmp_7_fu_429_p4, "tmp_7_fu_429_p4");
    sc_trace(mVcdFile, tmp_9_fu_468_p5, "tmp_9_fu_468_p5");
    sc_trace(mVcdFile, tmp_6_fu_485_p4, "tmp_6_fu_485_p4");
    sc_trace(mVcdFile, tmp_13_fu_524_p4, "tmp_13_fu_524_p4");
    sc_trace(mVcdFile, tmp_19_fu_551_p4, "tmp_19_fu_551_p4");
    sc_trace(mVcdFile, tmp_21_fu_566_p4, "tmp_21_fu_566_p4");
    sc_trace(mVcdFile, tmp_11_fu_599_p3, "tmp_11_fu_599_p3");
    sc_trace(mVcdFile, tmp_12_fu_611_p1, "tmp_12_fu_611_p1");
    sc_trace(mVcdFile, tmp_12_cast_fu_639_p1, "tmp_12_cast_fu_639_p1");
    sc_trace(mVcdFile, tmp_18_fu_643_p2, "tmp_18_fu_643_p2");
    sc_trace(mVcdFile, j4_cast2_fu_623_p1, "j4_cast2_fu_623_p1");
    sc_trace(mVcdFile, grp_fu_667_p0, "grp_fu_667_p0");
    sc_trace(mVcdFile, grp_fu_667_p1, "grp_fu_667_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, grp_fu_667_p00, "grp_fu_667_p00");
    sc_trace(mVcdFile, grp_fu_667_p10, "grp_fu_667_p10");
#endif

    }
    mHdltvinHandle.open("matrixmul_1D.hdltvin.dat");
    mHdltvoutHandle.open("matrixmul_1D.hdltvout.dat");
}

matrixmul_1D::~matrixmul_1D() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete Input_U;
    delete A_U;
    delete B_U;
    delete AB_2D_U;
    delete matrixmul_1D_mac_bkb_U1;
}

void matrixmul_1D::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(exitcond6_fu_363_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        i3_reg_199 = i_reg_678.read();
    } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        i3_reg_199 = ap_const_lv9_0;
    }
    if ((esl_seteq<1,1,1>(exitcond7_fu_339_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        i4_reg_222 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(exitcond4_fu_417_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        i4_reg_222 = i_1_reg_709.read();
    }
    if ((esl_seteq<1,1,1>(exitcond8_fu_500_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        i5_reg_317 = ap_const_lv8_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
                esl_seteq<1,1,1>(exitcond_fu_627_p2.read(), ap_const_lv1_1))) {
        i5_reg_317 = i_4_reg_810.read();
    }
    if ((esl_seteq<1,1,1>(exitcond5_fu_405_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        i6_reg_245 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                esl_seteq<1,1,1>(exitcond2_fu_456_p2.read(), ap_const_lv1_1))) {
        i6_reg_245 = i_2_reg_735.read();
    }
    if ((esl_seteq<1,1,1>(exitcond3_fu_444_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        i8_reg_269 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                esl_seteq<1,1,1>(exitcond9_fu_512_p2.read(), ap_const_lv1_1))) {
        i8_reg_269 = i_3_reg_756.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_fu_587_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        j4_reg_328 = ap_const_lv8_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        j4_reg_328 = j_4_reg_828.read();
    }
    if ((esl_seteq<1,1,1>(exitcond5_fu_405_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        j5_reg_234 = ap_const_lv2_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        j5_reg_234 = j_2_reg_717.read();
    }
    if ((esl_seteq<1,1,1>(exitcond3_fu_444_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        j7_reg_257 = ap_const_lv2_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        j7_reg_257 = j_3_reg_743.read();
    }
    if ((esl_seteq<1,1,1>(exitcond8_fu_500_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        j9_reg_281 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
                esl_seteq<1,1,1>(exitcond10_fu_539_p2.read(), ap_const_lv1_1))) {
        j9_reg_281 = j_5_reg_764.read();
    }
    if ((esl_seteq<1,1,1>(exitcond7_fu_339_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        j_reg_211 = ap_const_lv8_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        j_reg_211 = j_1_reg_691.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        k_reg_293 = k_1_reg_777.read();
    } else if ((esl_seteq<1,1,1>(exitcond9_fu_512_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        k_reg_293 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        sum_reg_304 = grp_fu_667_p3.read();
    } else if ((esl_seteq<1,1,1>(exitcond9_fu_512_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        sum_reg_304 = ap_const_lv19_0;
    }
    if ((esl_seteq<1,1,1>(exitcond9_fu_512_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        AB_2D_addr_reg_769 =  (sc_lv<14>) (tmp_17_fu_534_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        A_load_reg_792 = A_q0.read();
        B_load_reg_797 = B_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_1_reg_709 = i_1_fu_411_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        i_2_reg_735 = i_2_fu_450_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        i_3_reg_756 = i_3_fu_506_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        i_4_reg_810 = i_4_fu_593_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_678 = i_fu_345_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_1_reg_691 = j_1_fu_369_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        j_2_reg_717 = j_2_fu_423_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        j_3_reg_743 = j_3_fu_462_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        j_4_reg_828 = j_4_fu_633_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        j_5_reg_764 = j_5_fu_518_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        k_1_reg_777 = k_1_fu_545_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_fu_627_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        tmp_14_reg_838 = tmp_14_fu_653_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_fu_587_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        tmp_19_cast1_reg_815 = tmp_19_cast1_fu_607_p1.read();
        tmp_s_reg_820 = tmp_s_fu_615_p3.read();
    }
    if ((esl_seteq<1,1,1>(exitcond7_fu_339_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        tmp_2_cast_reg_683 = tmp_2_cast_fu_359_p1.read();
    }
    if ((esl_seteq<1,1,1>(exitcond6_fu_363_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        tmp_3_reg_701 = tmp_3_fu_396_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond4_fu_417_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        tmp_8_reg_722 = tmp_8_fu_439_p1.read();
    }
}

void matrixmul_1D::thread_AB_2D_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        AB_2D_address0 =  (sc_lv<14>) (tmp_23_cast_fu_648_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        AB_2D_address0 = AB_2D_addr_reg_769.read();
    } else {
        AB_2D_address0 = "XXXXXXXXXXXXXX";
    }
}

void matrixmul_1D::thread_AB_2D_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        AB_2D_ce0 = ap_const_logic_1;
    } else {
        AB_2D_ce0 = ap_const_logic_0;
    }
}

void matrixmul_1D::thread_AB_2D_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         esl_seteq<1,1,1>(exitcond10_fu_539_p2.read(), ap_const_lv1_1))) {
        AB_2D_we0 = ap_const_logic_1;
    } else {
        AB_2D_we0 = ap_const_logic_0;
    }
}

void matrixmul_1D::thread_AB_address0() {
    AB_address0 =  (sc_lv<14>) (tmp_15_fu_663_p1.read());
}

void matrixmul_1D::thread_AB_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        AB_ce0 = ap_const_logic_1;
    } else {
        AB_ce0 = ap_const_logic_0;
    }
}

void matrixmul_1D::thread_AB_d0() {
    AB_d0 = esl_zext<32,19>(AB_2D_q0.read());
}

void matrixmul_1D::thread_AB_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        AB_we0 = ap_const_logic_1;
    } else {
        AB_we0 = ap_const_logic_0;
    }
}

void matrixmul_1D::thread_A_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        A_address0 =  (sc_lv<14>) (tmp_20_fu_561_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        A_address0 =  (sc_lv<14>) (tmp_8_reg_722.read());
    } else {
        A_address0 = "XXXXXXXXXXXXXX";
    }
}

void matrixmul_1D::thread_A_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        A_ce0 = ap_const_logic_1;
    } else {
        A_ce0 = ap_const_logic_0;
    }
}

void matrixmul_1D::thread_A_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        A_we0 = ap_const_logic_1;
    } else {
        A_we0 = ap_const_logic_0;
    }
}

void matrixmul_1D::thread_B_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        B_address0 =  (sc_lv<14>) (tmp_22_fu_576_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        B_address0 =  (sc_lv<14>) (tmp_10_fu_495_p1.read());
    } else {
        B_address0 = "XXXXXXXXXXXXXX";
    }
}

void matrixmul_1D::thread_B_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        B_ce0 = ap_const_logic_1;
    } else {
        B_ce0 = ap_const_logic_0;
    }
}

void matrixmul_1D::thread_B_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        B_we0 = ap_const_logic_1;
    } else {
        B_we0 = ap_const_logic_0;
    }
}

void matrixmul_1D::thread_Input_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        Input_address0 =  (sc_lv<15>) (tmp_2_fu_480_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        Input_address0 =  (sc_lv<15>) (tmp_8_fu_439_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        Input_address0 =  (sc_lv<15>) (tmp_3_cast_fu_401_p1.read());
    } else {
        Input_address0 =  (sc_lv<15>) ("XXXXXXXXXXXXXXX");
    }
}

void matrixmul_1D::thread_Input_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        Input_ce0 = ap_const_logic_1;
    } else {
        Input_ce0 = ap_const_logic_0;
    }
}

void matrixmul_1D::thread_Input_orign_address0() {
    Input_orign_address0 =  (sc_lv<15>) (tmp_5_fu_387_p1.read());
}

void matrixmul_1D::thread_Input_orign_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        Input_orign_ce0 = ap_const_logic_1;
    } else {
        Input_orign_ce0 = ap_const_logic_0;
    }
}

void matrixmul_1D::thread_Input_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        Input_we0 = ap_const_logic_1;
    } else {
        Input_we0 = ap_const_logic_0;
    }
}

void matrixmul_1D::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void matrixmul_1D::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void matrixmul_1D::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void matrixmul_1D::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void matrixmul_1D::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void matrixmul_1D::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void matrixmul_1D::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void matrixmul_1D::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void matrixmul_1D::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void matrixmul_1D::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void matrixmul_1D::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void matrixmul_1D::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void matrixmul_1D::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void matrixmul_1D::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void matrixmul_1D::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void matrixmul_1D::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void matrixmul_1D::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void matrixmul_1D::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void matrixmul_1D::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_587_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void matrixmul_1D::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void matrixmul_1D::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_587_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void matrixmul_1D::thread_exitcond10_fu_539_p2() {
    exitcond10_fu_539_p2 = (!k_reg_293.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(k_reg_293.read() == ap_const_lv4_8);
}

void matrixmul_1D::thread_exitcond1_fu_587_p2() {
    exitcond1_fu_587_p2 = (!i5_reg_317.read().is_01() || !ap_const_lv8_80.is_01())? sc_lv<1>(): sc_lv<1>(i5_reg_317.read() == ap_const_lv8_80);
}

void matrixmul_1D::thread_exitcond2_fu_456_p2() {
    exitcond2_fu_456_p2 = (!j7_reg_257.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(j7_reg_257.read() == ap_const_lv2_3);
}

void matrixmul_1D::thread_exitcond3_fu_444_p2() {
    exitcond3_fu_444_p2 = (!i6_reg_245.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(i6_reg_245.read() == ap_const_lv2_3);
}

void matrixmul_1D::thread_exitcond4_fu_417_p2() {
    exitcond4_fu_417_p2 = (!j5_reg_234.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(j5_reg_234.read() == ap_const_lv2_3);
}

void matrixmul_1D::thread_exitcond5_fu_405_p2() {
    exitcond5_fu_405_p2 = (!i4_reg_222.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(i4_reg_222.read() == ap_const_lv2_3);
}

void matrixmul_1D::thread_exitcond6_fu_363_p2() {
    exitcond6_fu_363_p2 = (!j_reg_211.read().is_01() || !ap_const_lv8_80.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_211.read() == ap_const_lv8_80);
}

void matrixmul_1D::thread_exitcond7_fu_339_p2() {
    exitcond7_fu_339_p2 = (!i3_reg_199.read().is_01() || !ap_const_lv9_100.is_01())? sc_lv<1>(): sc_lv<1>(i3_reg_199.read() == ap_const_lv9_100);
}

void matrixmul_1D::thread_exitcond8_fu_500_p2() {
    exitcond8_fu_500_p2 = (!i8_reg_269.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i8_reg_269.read() == ap_const_lv4_8);
}

void matrixmul_1D::thread_exitcond9_fu_512_p2() {
    exitcond9_fu_512_p2 = (!j9_reg_281.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(j9_reg_281.read() == ap_const_lv4_8);
}

void matrixmul_1D::thread_exitcond_fu_627_p2() {
    exitcond_fu_627_p2 = (!j4_reg_328.read().is_01() || !ap_const_lv8_80.is_01())? sc_lv<1>(): sc_lv<1>(j4_reg_328.read() == ap_const_lv8_80);
}

void matrixmul_1D::thread_grp_fu_667_p0() {
    grp_fu_667_p0 =  (sc_lv<8>) (grp_fu_667_p00.read());
}

void matrixmul_1D::thread_grp_fu_667_p00() {
    grp_fu_667_p00 = esl_zext<16,8>(A_load_reg_792.read());
}

void matrixmul_1D::thread_grp_fu_667_p1() {
    grp_fu_667_p1 =  (sc_lv<8>) (grp_fu_667_p10.read());
}

void matrixmul_1D::thread_grp_fu_667_p10() {
    grp_fu_667_p10 = esl_zext<16,8>(B_load_reg_797.read());
}

void matrixmul_1D::thread_i_1_fu_411_p2() {
    i_1_fu_411_p2 = (!i4_reg_222.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i4_reg_222.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void matrixmul_1D::thread_i_2_fu_450_p2() {
    i_2_fu_450_p2 = (!i6_reg_245.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i6_reg_245.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void matrixmul_1D::thread_i_3_fu_506_p2() {
    i_3_fu_506_p2 = (!i8_reg_269.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i8_reg_269.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void matrixmul_1D::thread_i_4_fu_593_p2() {
    i_4_fu_593_p2 = (!i5_reg_317.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(i5_reg_317.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void matrixmul_1D::thread_i_fu_345_p2() {
    i_fu_345_p2 = (!i3_reg_199.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(i3_reg_199.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void matrixmul_1D::thread_j4_cast2_fu_623_p1() {
    j4_cast2_fu_623_p1 = esl_zext<14,8>(j4_reg_328.read());
}

void matrixmul_1D::thread_j_1_fu_369_p2() {
    j_1_fu_369_p2 = (!j_reg_211.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(j_reg_211.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void matrixmul_1D::thread_j_2_fu_423_p2() {
    j_2_fu_423_p2 = (!j5_reg_234.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(j5_reg_234.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void matrixmul_1D::thread_j_3_fu_462_p2() {
    j_3_fu_462_p2 = (!j7_reg_257.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(j7_reg_257.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void matrixmul_1D::thread_j_4_fu_633_p2() {
    j_4_fu_633_p2 = (!j4_reg_328.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(j4_reg_328.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void matrixmul_1D::thread_j_5_fu_518_p2() {
    j_5_fu_518_p2 = (!j9_reg_281.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j9_reg_281.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void matrixmul_1D::thread_k_1_fu_545_p2() {
    k_1_fu_545_p2 = (!k_reg_293.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(k_reg_293.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void matrixmul_1D::thread_tmp_10_fu_495_p1() {
    tmp_10_fu_495_p1 = esl_zext<64,9>(tmp_6_fu_485_p4.read());
}

void matrixmul_1D::thread_tmp_11_fu_599_p3() {
    tmp_11_fu_599_p3 = esl_concat<8,7>(i5_reg_317.read(), ap_const_lv7_0);
}

void matrixmul_1D::thread_tmp_12_cast_fu_639_p1() {
    tmp_12_cast_fu_639_p1 = esl_zext<16,8>(j4_reg_328.read());
}

void matrixmul_1D::thread_tmp_12_fu_611_p1() {
    tmp_12_fu_611_p1 = i5_reg_317.read().range(7-1, 0);
}

void matrixmul_1D::thread_tmp_13_fu_524_p4() {
    tmp_13_fu_524_p4 = esl_concat<7,4>(esl_concat<4,3>(i8_reg_269.read(), ap_const_lv3_0), j9_reg_281.read());
}

void matrixmul_1D::thread_tmp_14_fu_653_p2() {
    tmp_14_fu_653_p2 = (!j4_cast2_fu_623_p1.read().is_01() || !tmp_s_reg_820.read().is_01())? sc_lv<14>(): (sc_biguint<14>(j4_cast2_fu_623_p1.read()) + sc_biguint<14>(tmp_s_reg_820.read()));
}

void matrixmul_1D::thread_tmp_15_fu_663_p1() {
    tmp_15_fu_663_p1 = esl_zext<64,14>(tmp_14_reg_838.read());
}

void matrixmul_1D::thread_tmp_17_fu_534_p1() {
    tmp_17_fu_534_p1 = esl_zext<64,11>(tmp_13_fu_524_p4.read());
}

void matrixmul_1D::thread_tmp_18_fu_643_p2() {
    tmp_18_fu_643_p2 = (!tmp_19_cast1_reg_815.read().is_01() || !tmp_12_cast_fu_639_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(tmp_19_cast1_reg_815.read()) + sc_biguint<16>(tmp_12_cast_fu_639_p1.read()));
}

void matrixmul_1D::thread_tmp_19_cast1_fu_607_p1() {
    tmp_19_cast1_fu_607_p1 = esl_zext<16,15>(tmp_11_fu_599_p3.read());
}

void matrixmul_1D::thread_tmp_19_fu_551_p4() {
    tmp_19_fu_551_p4 = esl_concat<7,4>(esl_concat<4,3>(i8_reg_269.read(), ap_const_lv3_0), k_reg_293.read());
}

void matrixmul_1D::thread_tmp_1_fu_351_p3() {
    tmp_1_fu_351_p3 = esl_concat<9,7>(i3_reg_199.read(), ap_const_lv7_0);
}

void matrixmul_1D::thread_tmp_20_fu_561_p1() {
    tmp_20_fu_561_p1 = esl_zext<64,11>(tmp_19_fu_551_p4.read());
}

void matrixmul_1D::thread_tmp_21_fu_566_p4() {
    tmp_21_fu_566_p4 = esl_concat<7,4>(esl_concat<4,3>(k_reg_293.read(), ap_const_lv3_0), j9_reg_281.read());
}

void matrixmul_1D::thread_tmp_22_fu_576_p1() {
    tmp_22_fu_576_p1 = esl_zext<64,11>(tmp_21_fu_566_p4.read());
}

void matrixmul_1D::thread_tmp_23_cast_fu_648_p1() {
    tmp_23_cast_fu_648_p1 = esl_zext<64,16>(tmp_18_fu_643_p2.read());
}

void matrixmul_1D::thread_tmp_2_cast_fu_359_p1() {
    tmp_2_cast_fu_359_p1 = esl_zext<17,16>(tmp_1_fu_351_p3.read());
}

void matrixmul_1D::thread_tmp_2_fu_480_p1() {
    tmp_2_fu_480_p1 = esl_zext<64,15>(tmp_9_fu_468_p5.read());
}

void matrixmul_1D::thread_tmp_3_cast_fu_401_p1() {
    tmp_3_cast_fu_401_p1 = esl_zext<64,17>(tmp_3_reg_701.read());
}

void matrixmul_1D::thread_tmp_3_fu_396_p2() {
    tmp_3_fu_396_p2 = (!tmp_6_cast_fu_392_p1.read().is_01() || !tmp_2_cast_reg_683.read().is_01())? sc_lv<17>(): (sc_biguint<17>(tmp_6_cast_fu_392_p1.read()) + sc_biguint<17>(tmp_2_cast_reg_683.read()));
}

void matrixmul_1D::thread_tmp_4_fu_379_p3() {
    tmp_4_fu_379_p3 = esl_concat<8,8>(tmp_fu_375_p1.read(), j_reg_211.read());
}

void matrixmul_1D::thread_tmp_5_fu_387_p1() {
    tmp_5_fu_387_p1 = esl_zext<64,16>(tmp_4_fu_379_p3.read());
}

void matrixmul_1D::thread_tmp_6_cast_fu_392_p1() {
    tmp_6_cast_fu_392_p1 = esl_zext<17,8>(j_reg_211.read());
}

void matrixmul_1D::thread_tmp_6_fu_485_p4() {
    tmp_6_fu_485_p4 = esl_concat<7,2>(esl_concat<2,5>(i6_reg_245.read(), ap_const_lv5_0), j7_reg_257.read());
}

void matrixmul_1D::thread_tmp_7_fu_429_p4() {
    tmp_7_fu_429_p4 = esl_concat<7,2>(esl_concat<2,5>(i4_reg_222.read(), ap_const_lv5_0), j5_reg_234.read());
}

void matrixmul_1D::thread_tmp_8_fu_439_p1() {
    tmp_8_fu_439_p1 = esl_zext<64,9>(tmp_7_fu_429_p4.read());
}

void matrixmul_1D::thread_tmp_9_fu_468_p5() {
    tmp_9_fu_468_p5 = esl_concat<13,2>(esl_concat<8,5>(esl_concat<6,2>(ap_const_lv6_20, i6_reg_245.read()), ap_const_lv5_0), j7_reg_257.read());
}

void matrixmul_1D::thread_tmp_fu_375_p1() {
    tmp_fu_375_p1 = i3_reg_199.read().range(8-1, 0);
}

void matrixmul_1D::thread_tmp_s_fu_615_p3() {
    tmp_s_fu_615_p3 = esl_concat<7,7>(tmp_12_fu_611_p1.read(), ap_const_lv7_0);
}

void matrixmul_1D::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(exitcond7_fu_339_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(exitcond6_fu_363_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(exitcond5_fu_405_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(exitcond4_fu_417_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(exitcond3_fu_444_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(exitcond2_fu_456_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(exitcond8_fu_500_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(exitcond9_fu_512_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(exitcond10_fu_539_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 32768 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(exitcond1_fu_587_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state17;
            }
            break;
        case 65536 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && esl_seteq<1,1,1>(exitcond_fu_627_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_state18;
            }
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<18>) ("XXXXXXXXXXXXXXXXXX");
            break;
    }
}

void matrixmul_1D::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Input_orign_address0\" :  \"" << Input_orign_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Input_orign_ce0\" :  \"" << Input_orign_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Input_orign_q0\" :  \"" << Input_orign_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"AB_address0\" :  \"" << AB_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"AB_ce0\" :  \"" << AB_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"AB_we0\" :  \"" << AB_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"AB_d0\" :  \"" << AB_d0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

